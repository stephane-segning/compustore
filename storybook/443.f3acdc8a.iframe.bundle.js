/*! For license information please see 443.f3acdc8a.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkcomputer_nextjs=self.webpackChunkcomputer_nextjs||[]).push([[443],{"./node_modules/@tanstack/query-core/build/modern/focusManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>focusManager});var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),focusManager=new class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Q{#focused;#cleanup;#setup;constructor(){super(),this.#setup=onFocus=>{if(!_utils_js__WEBPACK_IMPORTED_MODULE_1__.S$&&window.addEventListener){const listener=()=>onFocus();return window.addEventListener("visibilitychange",listener,!1),()=>{window.removeEventListener("visibilitychange",listener)}}}}onSubscribe(){this.#cleanup||this.setEventListener(this.#setup)}onUnsubscribe(){this.hasListeners()||(this.#cleanup?.(),this.#cleanup=void 0)}setEventListener(setup){this.#setup=setup,this.#cleanup?.(),this.#cleanup=setup((focused=>{"boolean"==typeof focused?this.setFocused(focused):this.onFocus()}))}setFocused(focused){this.#focused!==focused&&(this.#focused=focused,this.onFocus())}onFocus(){const isFocused=this.isFocused();this.listeners.forEach((listener=>{listener(isFocused)}))}isFocused(){return"boolean"==typeof this.#focused?this.#focused:"hidden"!==globalThis.document?.visibilityState}}},"./node_modules/@tanstack/query-core/build/modern/hydration.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function defaultShouldDehydrateQuery(query){return"success"===query.state.status}__webpack_require__.d(__webpack_exports__,{XS:()=>defaultShouldDehydrateQuery})},"./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{PL:()=>infiniteQueryBehavior,RQ:()=>hasPreviousPage,rB:()=>hasNextPage});var _utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js");function infiniteQueryBehavior(pages){return{onFetch:(context,query)=>{const options=context.options,direction=context.fetchOptions?.meta?.fetchMore?.direction,oldPages=context.state.data?.pages||[],oldPageParams=context.state.data?.pageParams||[];let result={pages:[],pageParams:[]},currentPage=0;const fetchFn=async()=>{let cancelled=!1;const queryFn=(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ZM)(context.options,context.fetchOptions),fetchPage=async(data,param,previous)=>{if(cancelled)return Promise.reject();if(null==param&&data.pages.length)return Promise.resolve(data);const queryFnContext={queryKey:context.queryKey,pageParam:param,direction:previous?"backward":"forward",meta:context.options.meta};var object;object=queryFnContext,Object.defineProperty(object,"signal",{enumerable:!0,get:()=>(context.signal.aborted?cancelled=!0:context.signal.addEventListener("abort",(()=>{cancelled=!0})),context.signal)});const page=await queryFn(queryFnContext),{maxPages}=context.options,addTo=previous?_utils_js__WEBPACK_IMPORTED_MODULE_0__.ZZ:_utils_js__WEBPACK_IMPORTED_MODULE_0__.y9;return{pages:addTo(data.pages,page,maxPages),pageParams:addTo(data.pageParams,param,maxPages)}};if(direction&&oldPages.length){const previous="backward"===direction,oldData={pages:oldPages,pageParams:oldPageParams},param=(previous?getPreviousPageParam:getNextPageParam)(options,oldData);result=await fetchPage(oldData,param,previous)}else{const remainingPages=pages??oldPages.length;do{const param=0===currentPage?oldPageParams[0]??options.initialPageParam:getNextPageParam(options,result);if(currentPage>0&&null==param)break;result=await fetchPage(result,param),currentPage++}while(currentPage<remainingPages)}return result};context.options.persister?context.fetchFn=()=>context.options.persister?.(fetchFn,{queryKey:context.queryKey,meta:context.options.meta,signal:context.signal},query):context.fetchFn=fetchFn}}}function getNextPageParam(options,{pages,pageParams}){const lastIndex=pages.length-1;return pages.length>0?options.getNextPageParam(pages[lastIndex],pages,pageParams[lastIndex],pageParams):void 0}function getPreviousPageParam(options,{pages,pageParams}){return pages.length>0?options.getPreviousPageParam?.(pages[0],pages,pageParams[0],pageParams):void 0}function hasNextPage(options,data){return!!data&&null!=getNextPageParam(options,data)}function hasPreviousPage(options,data){return!(!data||!options.getPreviousPageParam)&&null!=getPreviousPageParam(options,data)}},"./node_modules/@tanstack/query-core/build/modern/mutation.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>getDefaultState,s:()=>Mutation});var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),_removable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/removable.js"),_retryer_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/retryer.js"),Mutation=class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.k{#observers;#mutationCache;#retryer;constructor(config){super(),this.mutationId=config.mutationId,this.#mutationCache=config.mutationCache,this.#observers=[],this.state=config.state||{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0},this.setOptions(config.options),this.scheduleGc()}setOptions(options){this.options=options,this.updateGcTime(this.options.gcTime)}get meta(){return this.options.meta}addObserver(observer){this.#observers.includes(observer)||(this.#observers.push(observer),this.clearGcTimeout(),this.#mutationCache.notify({type:"observerAdded",mutation:this,observer}))}removeObserver(observer){this.#observers=this.#observers.filter((x=>x!==observer)),this.scheduleGc(),this.#mutationCache.notify({type:"observerRemoved",mutation:this,observer})}optionalRemove(){this.#observers.length||("pending"===this.state.status?this.scheduleGc():this.#mutationCache.remove(this))}continue(){return this.#retryer?.continue()??this.execute(this.state.variables)}async execute(variables){this.#retryer=(0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.II)({fn:()=>this.options.mutationFn?this.options.mutationFn(variables):Promise.reject(new Error("No mutationFn found")),onFail:(failureCount,error)=>{this.#dispatch({type:"failed",failureCount,error})},onPause:()=>{this.#dispatch({type:"pause"})},onContinue:()=>{this.#dispatch({type:"continue"})},retry:this.options.retry??0,retryDelay:this.options.retryDelay,networkMode:this.options.networkMode,canRun:()=>this.#mutationCache.canRun(this)});const restored="pending"===this.state.status,isPaused=!this.#retryer.canStart();try{if(!restored){this.#dispatch({type:"pending",variables,isPaused}),await(this.#mutationCache.config.onMutate?.(variables,this));const context=await(this.options.onMutate?.(variables));context!==this.state.context&&this.#dispatch({type:"pending",context,variables,isPaused})}const data=await this.#retryer.start();return await(this.#mutationCache.config.onSuccess?.(data,variables,this.state.context,this)),await(this.options.onSuccess?.(data,variables,this.state.context)),await(this.#mutationCache.config.onSettled?.(data,null,this.state.variables,this.state.context,this)),await(this.options.onSettled?.(data,null,variables,this.state.context)),this.#dispatch({type:"success",data}),data}catch(error){try{throw await(this.#mutationCache.config.onError?.(error,variables,this.state.context,this)),await(this.options.onError?.(error,variables,this.state.context)),await(this.#mutationCache.config.onSettled?.(void 0,error,this.state.variables,this.state.context,this)),await(this.options.onSettled?.(void 0,error,variables,this.state.context)),error}finally{this.#dispatch({type:"error",error})}}finally{this.#mutationCache.runNext(this)}}#dispatch(action){this.state=(state=>{switch(action.type){case"failed":return{...state,failureCount:action.failureCount,failureReason:action.error};case"pause":return{...state,isPaused:!0};case"continue":return{...state,isPaused:!1};case"pending":return{...state,context:action.context,data:void 0,failureCount:0,failureReason:null,error:null,isPaused:action.isPaused,status:"pending",variables:action.variables,submittedAt:Date.now()};case"success":return{...state,data:action.data,failureCount:0,failureReason:null,error:null,status:"success",isPaused:!1};case"error":return{...state,data:void 0,error:action.error,failureCount:state.failureCount+1,failureReason:action.error,isPaused:!1,status:"error"}}})(this.state),_notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.j.batch((()=>{this.#observers.forEach((observer=>{observer.onMutationUpdate(action)})),this.#mutationCache.notify({mutation:this,type:"updated",action})}))}};function getDefaultState(){return{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0,submittedAt:0}}},"./node_modules/@tanstack/query-core/build/modern/notifyManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>notifyManager});var notifyManager=function createNotifyManager(){let queue=[],transactions=0,notifyFn=callback=>{callback()},batchNotifyFn=callback=>{callback()},scheduleFn=cb=>setTimeout(cb,0);const schedule=callback=>{transactions?queue.push(callback):scheduleFn((()=>{notifyFn(callback)}))};return{batch:callback=>{let result;transactions++;try{result=callback()}finally{transactions--,transactions||(()=>{const originalQueue=queue;queue=[],originalQueue.length&&scheduleFn((()=>{batchNotifyFn((()=>{originalQueue.forEach((callback=>{notifyFn(callback)}))}))}))})()}return result},batchCalls:callback=>(...args)=>{schedule((()=>{callback(...args)}))},schedule,setNotifyFunction:fn=>{notifyFn=fn},setBatchNotifyFunction:fn=>{batchNotifyFn=fn},setScheduler:fn=>{scheduleFn=fn}}}()},"./node_modules/@tanstack/query-core/build/modern/onlineManager.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>onlineManager});var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),onlineManager=new class extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Q{#online=!0;#cleanup;#setup;constructor(){super(),this.#setup=onOnline=>{if(!_utils_js__WEBPACK_IMPORTED_MODULE_1__.S$&&window.addEventListener){const onlineListener=()=>onOnline(!0),offlineListener=()=>onOnline(!1);return window.addEventListener("online",onlineListener,!1),window.addEventListener("offline",offlineListener,!1),()=>{window.removeEventListener("online",onlineListener),window.removeEventListener("offline",offlineListener)}}}}onSubscribe(){this.#cleanup||this.setEventListener(this.#setup)}onUnsubscribe(){this.hasListeners()||(this.#cleanup?.(),this.#cleanup=void 0)}setEventListener(setup){this.#setup=setup,this.#cleanup?.(),this.#cleanup=setup(this.setOnline.bind(this))}setOnline(online){this.#online!==online&&(this.#online=online,this.listeners.forEach((listener=>{listener(online)})))}isOnline(){return this.#online}}},"./node_modules/@tanstack/query-core/build/modern/query.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{X:()=>Query,k:()=>fetchState});var _utils_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),_notifyManager_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),_retryer_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/retryer.js"),_removable_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/removable.js"),Query=class extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.k{#initialState;#revertState;#cache;#retryer;#defaultOptions;#abortSignalConsumed;constructor(config){super(),this.#abortSignalConsumed=!1,this.#defaultOptions=config.defaultOptions,this.setOptions(config.options),this.observers=[],this.#cache=config.cache,this.queryKey=config.queryKey,this.queryHash=config.queryHash,this.#initialState=function getDefaultState(options){const data="function"==typeof options.initialData?options.initialData():options.initialData,hasData=void 0!==data,initialDataUpdatedAt=hasData?"function"==typeof options.initialDataUpdatedAt?options.initialDataUpdatedAt():options.initialDataUpdatedAt:0;return{data,dataUpdateCount:0,dataUpdatedAt:hasData?initialDataUpdatedAt??Date.now():0,error:null,errorUpdateCount:0,errorUpdatedAt:0,fetchFailureCount:0,fetchFailureReason:null,fetchMeta:null,isInvalidated:!1,status:hasData?"success":"pending",fetchStatus:"idle"}}(this.options),this.state=config.state??this.#initialState,this.scheduleGc()}get meta(){return this.options.meta}get promise(){return this.#retryer?.promise}setOptions(options){this.options={...this.#defaultOptions,...options},this.updateGcTime(this.options.gcTime)}optionalRemove(){this.observers.length||"idle"!==this.state.fetchStatus||this.#cache.remove(this)}setData(newData,options){const data=(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.pl)(this.state.data,newData,this.options);return this.#dispatch({data,type:"success",dataUpdatedAt:options?.updatedAt,manual:options?.manual}),data}setState(state,setStateOptions){this.#dispatch({type:"setState",state,setStateOptions})}cancel(options){const promise=this.#retryer?.promise;return this.#retryer?.cancel(options),promise?promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.lQ).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.lQ):Promise.resolve()}destroy(){super.destroy(),this.cancel({silent:!0})}reset(){this.destroy(),this.setState(this.#initialState)}isActive(){return this.observers.some((observer=>!1!==(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.Eh)(observer.options.enabled,this)))}isDisabled(){return this.getObserversCount()>0?!this.isActive():this.options.queryFn===_utils_js__WEBPACK_IMPORTED_MODULE_1__.hT||this.state.dataUpdateCount+this.state.errorUpdateCount===0}isStale(){return!!this.state.isInvalidated||(this.getObserversCount()>0?this.observers.some((observer=>observer.getCurrentResult().isStale)):void 0===this.state.data)}isStaleByTime(staleTime=0){return this.state.isInvalidated||void 0===this.state.data||!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.j3)(this.state.dataUpdatedAt,staleTime)}onFocus(){const observer=this.observers.find((x=>x.shouldFetchOnWindowFocus()));observer?.refetch({cancelRefetch:!1}),this.#retryer?.continue()}onOnline(){const observer=this.observers.find((x=>x.shouldFetchOnReconnect()));observer?.refetch({cancelRefetch:!1}),this.#retryer?.continue()}addObserver(observer){this.observers.includes(observer)||(this.observers.push(observer),this.clearGcTimeout(),this.#cache.notify({type:"observerAdded",query:this,observer}))}removeObserver(observer){this.observers.includes(observer)&&(this.observers=this.observers.filter((x=>x!==observer)),this.observers.length||(this.#retryer&&(this.#abortSignalConsumed?this.#retryer.cancel({revert:!0}):this.#retryer.cancelRetry()),this.scheduleGc()),this.#cache.notify({type:"observerRemoved",query:this,observer}))}getObserversCount(){return this.observers.length}invalidate(){this.state.isInvalidated||this.#dispatch({type:"invalidate"})}fetch(options,fetchOptions){if("idle"!==this.state.fetchStatus)if(void 0!==this.state.data&&fetchOptions?.cancelRefetch)this.cancel({silent:!0});else if(this.#retryer)return this.#retryer.continueRetry(),this.#retryer.promise;if(options&&this.setOptions(options),!this.options.queryFn){const observer=this.observers.find((x=>x.options.queryFn));observer&&this.setOptions(observer.options)}const abortController=new AbortController,addSignalProperty=object=>{Object.defineProperty(object,"signal",{enumerable:!0,get:()=>(this.#abortSignalConsumed=!0,abortController.signal)})},context={fetchOptions,options:this.options,queryKey:this.queryKey,state:this.state,fetchFn:()=>{const queryFn=(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ZM)(this.options,fetchOptions),queryFnContext={queryKey:this.queryKey,meta:this.meta};return addSignalProperty(queryFnContext),this.#abortSignalConsumed=!1,this.options.persister?this.options.persister(queryFn,queryFnContext,this):queryFn(queryFnContext)}};addSignalProperty(context),this.options.behavior?.onFetch(context,this),this.#revertState=this.state,"idle"!==this.state.fetchStatus&&this.state.fetchMeta===context.fetchOptions?.meta||this.#dispatch({type:"fetch",meta:context.fetchOptions?.meta});const onError=error=>{(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.wm)(error)&&error.silent||this.#dispatch({type:"error",error}),(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.wm)(error)||(this.#cache.config.onError?.(error,this),this.#cache.config.onSettled?.(this.state.data,error,this)),this.scheduleGc()};return this.#retryer=(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.II)({initialPromise:fetchOptions?.initialPromise,fn:context.fetchFn,abort:abortController.abort.bind(abortController),onSuccess:data=>{if(void 0!==data){try{this.setData(data)}catch(error){return void onError(error)}this.#cache.config.onSuccess?.(data,this),this.#cache.config.onSettled?.(data,this.state.error,this),this.scheduleGc()}else onError(new Error(`${this.queryHash} data is undefined`))},onError,onFail:(failureCount,error)=>{this.#dispatch({type:"failed",failureCount,error})},onPause:()=>{this.#dispatch({type:"pause"})},onContinue:()=>{this.#dispatch({type:"continue"})},retry:context.options.retry,retryDelay:context.options.retryDelay,networkMode:context.options.networkMode,canRun:()=>!0}),this.#retryer.start()}#dispatch(action){this.state=(state=>{switch(action.type){case"failed":return{...state,fetchFailureCount:action.failureCount,fetchFailureReason:action.error};case"pause":return{...state,fetchStatus:"paused"};case"continue":return{...state,fetchStatus:"fetching"};case"fetch":return{...state,...fetchState(state.data,this.options),fetchMeta:action.meta??null};case"success":return{...state,data:action.data,dataUpdateCount:state.dataUpdateCount+1,dataUpdatedAt:action.dataUpdatedAt??Date.now(),error:null,isInvalidated:!1,status:"success",...!action.manual&&{fetchStatus:"idle",fetchFailureCount:0,fetchFailureReason:null}};case"error":const error=action.error;return(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.wm)(error)&&error.revert&&this.#revertState?{...this.#revertState,fetchStatus:"idle"}:{...state,error,errorUpdateCount:state.errorUpdateCount+1,errorUpdatedAt:Date.now(),fetchFailureCount:state.fetchFailureCount+1,fetchFailureReason:error,fetchStatus:"idle",status:"error"};case"invalidate":return{...state,isInvalidated:!0};case"setState":return{...state,...action.state}}})(this.state),_notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.j.batch((()=>{this.observers.forEach((observer=>{observer.onQueryUpdate()})),this.#cache.notify({query:this,type:"updated",action})}))}};function fetchState(data,options){return{fetchFailureCount:0,fetchFailureReason:null,fetchStatus:(0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.v_)(options.networkMode)?"fetching":"paused",...void 0===data&&{error:null,status:"pending"}}}},"./node_modules/@tanstack/query-core/build/modern/queryClient.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>QueryClient});var utils=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),modern_query=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/query.js"),notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),QueryCache=class extends subscribable.Q{constructor(config={}){super(),this.config=config,this.#queries=new Map}#queries;build(client,options,state){const queryKey=options.queryKey,queryHash=options.queryHash??(0,utils.F$)(queryKey,options);let query=this.get(queryHash);return query||(query=new modern_query.X({cache:this,queryKey,queryHash,options:client.defaultQueryOptions(options),state,defaultOptions:client.getQueryDefaults(queryKey)}),this.add(query)),query}add(query){this.#queries.has(query.queryHash)||(this.#queries.set(query.queryHash,query),this.notify({type:"added",query}))}remove(query){const queryInMap=this.#queries.get(query.queryHash);queryInMap&&(query.destroy(),queryInMap===query&&this.#queries.delete(query.queryHash),this.notify({type:"removed",query}))}clear(){notifyManager.j.batch((()=>{this.getAll().forEach((query=>{this.remove(query)}))}))}get(queryHash){return this.#queries.get(queryHash)}getAll(){return[...this.#queries.values()]}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find((query=>(0,utils.MK)(defaultedFilters,query)))}findAll(filters={}){const queries=this.getAll();return Object.keys(filters).length>0?queries.filter((query=>(0,utils.MK)(filters,query))):queries}notify(event){notifyManager.j.batch((()=>{this.listeners.forEach((listener=>{listener(event)}))}))}onFocus(){notifyManager.j.batch((()=>{this.getAll().forEach((query=>{query.onFocus()}))}))}onOnline(){notifyManager.j.batch((()=>{this.getAll().forEach((query=>{query.onOnline()}))}))}},modern_mutation=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/mutation.js"),MutationCache=class extends subscribable.Q{constructor(config={}){super(),this.config=config,this.#mutations=new Map,this.#mutationId=Date.now()}#mutations;#mutationId;build(client,options,state){const mutation=new modern_mutation.s({mutationCache:this,mutationId:++this.#mutationId,options:client.defaultMutationOptions(options),state});return this.add(mutation),mutation}add(mutation){const scope=scopeFor(mutation),mutations=this.#mutations.get(scope)??[];mutations.push(mutation),this.#mutations.set(scope,mutations),this.notify({type:"added",mutation})}remove(mutation){const scope=scopeFor(mutation);if(this.#mutations.has(scope)){const mutations=this.#mutations.get(scope)?.filter((x=>x!==mutation));mutations&&(0===mutations.length?this.#mutations.delete(scope):this.#mutations.set(scope,mutations))}this.notify({type:"removed",mutation})}canRun(mutation){const firstPendingMutation=this.#mutations.get(scopeFor(mutation))?.find((m=>"pending"===m.state.status));return!firstPendingMutation||firstPendingMutation===mutation}runNext(mutation){const foundMutation=this.#mutations.get(scopeFor(mutation))?.find((m=>m!==mutation&&m.state.isPaused));return foundMutation?.continue()??Promise.resolve()}clear(){notifyManager.j.batch((()=>{this.getAll().forEach((mutation=>{this.remove(mutation)}))}))}getAll(){return[...this.#mutations.values()].flat()}find(filters){const defaultedFilters={exact:!0,...filters};return this.getAll().find((mutation=>(0,utils.nJ)(defaultedFilters,mutation)))}findAll(filters={}){return this.getAll().filter((mutation=>(0,utils.nJ)(filters,mutation)))}notify(event){notifyManager.j.batch((()=>{this.listeners.forEach((listener=>{listener(event)}))}))}resumePausedMutations(){const pausedMutations=this.getAll().filter((x=>x.state.isPaused));return notifyManager.j.batch((()=>Promise.all(pausedMutations.map((mutation=>mutation.continue().catch(utils.lQ))))))}};function scopeFor(mutation){return mutation.options.scope?.id??String(mutation.mutationId)}var focusManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),onlineManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/onlineManager.js"),infiniteQueryBehavior=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js"),QueryClient=class{#queryCache;#mutationCache;#defaultOptions;#queryDefaults;#mutationDefaults;#mountCount;#unsubscribeFocus;#unsubscribeOnline;constructor(config={}){this.#queryCache=config.queryCache||new QueryCache,this.#mutationCache=config.mutationCache||new MutationCache,this.#defaultOptions=config.defaultOptions||{},this.#queryDefaults=new Map,this.#mutationDefaults=new Map,this.#mountCount=0}mount(){this.#mountCount++,1===this.#mountCount&&(this.#unsubscribeFocus=focusManager.m.subscribe((async focused=>{focused&&(await this.resumePausedMutations(),this.#queryCache.onFocus())})),this.#unsubscribeOnline=onlineManager.t.subscribe((async online=>{online&&(await this.resumePausedMutations(),this.#queryCache.onOnline())})))}unmount(){this.#mountCount--,0===this.#mountCount&&(this.#unsubscribeFocus?.(),this.#unsubscribeFocus=void 0,this.#unsubscribeOnline?.(),this.#unsubscribeOnline=void 0)}isFetching(filters){return this.#queryCache.findAll({...filters,fetchStatus:"fetching"}).length}isMutating(filters){return this.#mutationCache.findAll({...filters,status:"pending"}).length}getQueryData(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state.data}ensureQueryData(options){const cachedData=this.getQueryData(options.queryKey);if(void 0===cachedData)return this.fetchQuery(options);{const defaultedOptions=this.defaultQueryOptions(options),query=this.#queryCache.build(this,defaultedOptions);return options.revalidateIfStale&&query.isStaleByTime((0,utils.d2)(defaultedOptions.staleTime,query))&&this.prefetchQuery(defaultedOptions),Promise.resolve(cachedData)}}getQueriesData(filters){return this.#queryCache.findAll(filters).map((({queryKey,state})=>[queryKey,state.data]))}setQueryData(queryKey,updater,options){const defaultedOptions=this.defaultQueryOptions({queryKey}),query=this.#queryCache.get(defaultedOptions.queryHash),prevData=query?.state.data,data=(0,utils.Zw)(updater,prevData);if(void 0!==data)return this.#queryCache.build(this,defaultedOptions).setData(data,{...options,manual:!0})}setQueriesData(filters,updater,options){return notifyManager.j.batch((()=>this.#queryCache.findAll(filters).map((({queryKey})=>[queryKey,this.setQueryData(queryKey,updater,options)]))))}getQueryState(queryKey){const options=this.defaultQueryOptions({queryKey});return this.#queryCache.get(options.queryHash)?.state}removeQueries(filters){const queryCache=this.#queryCache;notifyManager.j.batch((()=>{queryCache.findAll(filters).forEach((query=>{queryCache.remove(query)}))}))}resetQueries(filters,options){const queryCache=this.#queryCache,refetchFilters={type:"active",...filters};return notifyManager.j.batch((()=>(queryCache.findAll(filters).forEach((query=>{query.reset()})),this.refetchQueries(refetchFilters,options))))}cancelQueries(filters={},cancelOptions={}){const defaultedCancelOptions={revert:!0,...cancelOptions},promises=notifyManager.j.batch((()=>this.#queryCache.findAll(filters).map((query=>query.cancel(defaultedCancelOptions)))));return Promise.all(promises).then(utils.lQ).catch(utils.lQ)}invalidateQueries(filters={},options={}){return notifyManager.j.batch((()=>{if(this.#queryCache.findAll(filters).forEach((query=>{query.invalidate()})),"none"===filters.refetchType)return Promise.resolve();const refetchFilters={...filters,type:filters.refetchType??filters.type??"active"};return this.refetchQueries(refetchFilters,options)}))}refetchQueries(filters={},options){const fetchOptions={...options,cancelRefetch:options?.cancelRefetch??!0},promises=notifyManager.j.batch((()=>this.#queryCache.findAll(filters).filter((query=>!query.isDisabled())).map((query=>{let promise=query.fetch(void 0,fetchOptions);return fetchOptions.throwOnError||(promise=promise.catch(utils.lQ)),"paused"===query.state.fetchStatus?Promise.resolve():promise}))));return Promise.all(promises).then(utils.lQ)}fetchQuery(options){const defaultedOptions=this.defaultQueryOptions(options);void 0===defaultedOptions.retry&&(defaultedOptions.retry=!1);const query=this.#queryCache.build(this,defaultedOptions);return query.isStaleByTime((0,utils.d2)(defaultedOptions.staleTime,query))?query.fetch(defaultedOptions):Promise.resolve(query.state.data)}prefetchQuery(options){return this.fetchQuery(options).then(utils.lQ).catch(utils.lQ)}fetchInfiniteQuery(options){return options.behavior=(0,infiniteQueryBehavior.PL)(options.pages),this.fetchQuery(options)}prefetchInfiniteQuery(options){return this.fetchInfiniteQuery(options).then(utils.lQ).catch(utils.lQ)}ensureInfiniteQueryData(options){return options.behavior=(0,infiniteQueryBehavior.PL)(options.pages),this.ensureQueryData(options)}resumePausedMutations(){return onlineManager.t.isOnline()?this.#mutationCache.resumePausedMutations():Promise.resolve()}getQueryCache(){return this.#queryCache}getMutationCache(){return this.#mutationCache}getDefaultOptions(){return this.#defaultOptions}setDefaultOptions(options){this.#defaultOptions=options}setQueryDefaults(queryKey,options){this.#queryDefaults.set((0,utils.EN)(queryKey),{queryKey,defaultOptions:options})}getQueryDefaults(queryKey){const defaults=[...this.#queryDefaults.values()];let result={};return defaults.forEach((queryDefault=>{(0,utils.Cp)(queryKey,queryDefault.queryKey)&&(result={...result,...queryDefault.defaultOptions})})),result}setMutationDefaults(mutationKey,options){this.#mutationDefaults.set((0,utils.EN)(mutationKey),{mutationKey,defaultOptions:options})}getMutationDefaults(mutationKey){const defaults=[...this.#mutationDefaults.values()];let result={};return defaults.forEach((queryDefault=>{(0,utils.Cp)(mutationKey,queryDefault.mutationKey)&&(result={...result,...queryDefault.defaultOptions})})),result}defaultQueryOptions(options){if(options._defaulted)return options;const defaultedOptions={...this.#defaultOptions.queries,...this.getQueryDefaults(options.queryKey),...options,_defaulted:!0};return defaultedOptions.queryHash||(defaultedOptions.queryHash=(0,utils.F$)(defaultedOptions.queryKey,defaultedOptions)),void 0===defaultedOptions.refetchOnReconnect&&(defaultedOptions.refetchOnReconnect="always"!==defaultedOptions.networkMode),void 0===defaultedOptions.throwOnError&&(defaultedOptions.throwOnError=!!defaultedOptions.suspense),!defaultedOptions.networkMode&&defaultedOptions.persister&&(defaultedOptions.networkMode="offlineFirst"),!0!==defaultedOptions.enabled&&defaultedOptions.queryFn===utils.hT&&(defaultedOptions.enabled=!1),defaultedOptions}defaultMutationOptions(options){return options?._defaulted?options:{...this.#defaultOptions.mutations,...options?.mutationKey&&this.getMutationDefaults(options.mutationKey),...options,_defaulted:!0}}clear(){this.#queryCache.clear(),this.#mutationCache.clear()}}},"./node_modules/@tanstack/query-core/build/modern/removable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{k:()=>Removable});var _utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),Removable=class{#gcTimeout;destroy(){this.clearGcTimeout()}scheduleGc(){this.clearGcTimeout(),(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.gn)(this.gcTime)&&(this.#gcTimeout=setTimeout((()=>{this.optionalRemove()}),this.gcTime))}updateGcTime(newGcTime){this.gcTime=Math.max(this.gcTime||0,newGcTime??(_utils_js__WEBPACK_IMPORTED_MODULE_0__.S$?1/0:3e5))}clearGcTimeout(){this.#gcTimeout&&(clearTimeout(this.#gcTimeout),this.#gcTimeout=void 0)}}},"./node_modules/@tanstack/query-core/build/modern/retryer.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{II:()=>createRetryer,v_:()=>canFetch,wm:()=>isCancelledError});var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/onlineManager.js"),_thenable_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/thenable.js"),_utils_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js");function defaultRetryDelay(failureCount){return Math.min(1e3*2**failureCount,3e4)}function canFetch(networkMode){return"online"!==(networkMode??"online")||_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.t.isOnline()}var CancelledError=class extends Error{constructor(options){super("CancelledError"),this.revert=options?.revert,this.silent=options?.silent}};function isCancelledError(value){return value instanceof CancelledError}function createRetryer(config){let continueFn,isRetryCancelled=!1,failureCount=0,isResolved=!1;const thenable=(0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.T)(),canContinue=()=>_focusManager_js__WEBPACK_IMPORTED_MODULE_2__.m.isFocused()&&("always"===config.networkMode||_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.t.isOnline())&&config.canRun(),canStart=()=>canFetch(config.networkMode)&&config.canRun(),resolve=value=>{isResolved||(isResolved=!0,config.onSuccess?.(value),continueFn?.(),thenable.resolve(value))},reject=value=>{isResolved||(isResolved=!0,config.onError?.(value),continueFn?.(),thenable.reject(value))},pause=()=>new Promise((continueResolve=>{continueFn=value=>{(isResolved||canContinue())&&continueResolve(value)},config.onPause?.()})).then((()=>{continueFn=void 0,isResolved||config.onContinue?.()})),run=()=>{if(isResolved)return;let promiseOrValue;const initialPromise=0===failureCount?config.initialPromise:void 0;try{promiseOrValue=initialPromise??config.fn()}catch(error){promiseOrValue=Promise.reject(error)}Promise.resolve(promiseOrValue).then(resolve).catch((error=>{if(isResolved)return;const retry=config.retry??(_utils_js__WEBPACK_IMPORTED_MODULE_3__.S$?0:3),retryDelay=config.retryDelay??defaultRetryDelay,delay="function"==typeof retryDelay?retryDelay(failureCount,error):retryDelay,shouldRetry=!0===retry||"number"==typeof retry&&failureCount<retry||"function"==typeof retry&&retry(failureCount,error);!isRetryCancelled&&shouldRetry?(failureCount++,config.onFail?.(failureCount,error),(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.yy)(delay).then((()=>canContinue()?void 0:pause())).then((()=>{isRetryCancelled?reject(error):run()}))):reject(error)}))};return{promise:thenable,cancel:cancelOptions=>{isResolved||(reject(new CancelledError(cancelOptions)),config.abort?.())},continue:()=>(continueFn?.(),thenable),cancelRetry:()=>{isRetryCancelled=!0},continueRetry:()=>{isRetryCancelled=!1},canStart,start:()=>(canStart()?run():pause().then(run),thenable)}}},"./node_modules/@tanstack/query-core/build/modern/subscribable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>Subscribable});var Subscribable=class{constructor(){this.listeners=new Set,this.subscribe=this.subscribe.bind(this)}subscribe(listener){return this.listeners.add(listener),this.onSubscribe(),()=>{this.listeners.delete(listener),this.onUnsubscribe()}}hasListeners(){return this.listeners.size>0}onSubscribe(){}onUnsubscribe(){}}},"./node_modules/@tanstack/query-core/build/modern/thenable.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function pendingThenable(){let resolve,reject;const thenable=new Promise(((_resolve,_reject)=>{resolve=_resolve,reject=_reject}));function finalize(data){Object.assign(thenable,data),delete thenable.resolve,delete thenable.reject}return thenable.status="pending",thenable.catch((()=>{})),thenable.resolve=value=>{finalize({status:"fulfilled",value}),resolve(value)},thenable.reject=reason=>{finalize({status:"rejected",reason}),reject(reason)},thenable}__webpack_require__.d(__webpack_exports__,{T:()=>pendingThenable})},"./node_modules/@tanstack/query-core/build/modern/utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BH:()=>replaceEqualDeep,Cp:()=>partialMatchKey,EN:()=>hashKey,Eh:()=>resolveEnabled,F$:()=>hashQueryKeyByOptions,MK:()=>matchQuery,S$:()=>isServer,ZM:()=>ensureQueryFn,ZZ:()=>addToStart,Zw:()=>functionalUpdate,d2:()=>resolveStaleTime,f8:()=>shallowEqualObjects,gn:()=>isValidTimeout,hT:()=>skipToken,j3:()=>timeUntilStale,lQ:()=>noop,nJ:()=>matchMutation,pl:()=>replaceData,y9:()=>addToEnd,yy:()=>sleep});var isServer="undefined"==typeof window||"Deno"in globalThis;function noop(){}function functionalUpdate(updater,input){return"function"==typeof updater?updater(input):updater}function isValidTimeout(value){return"number"==typeof value&&value>=0&&value!==1/0}function timeUntilStale(updatedAt,staleTime){return Math.max(updatedAt+(staleTime||0)-Date.now(),0)}function resolveStaleTime(staleTime,query){return"function"==typeof staleTime?staleTime(query):staleTime}function resolveEnabled(enabled,query){return"function"==typeof enabled?enabled(query):enabled}function matchQuery(filters,query){const{type="all",exact,fetchStatus,predicate,queryKey,stale}=filters;if(queryKey)if(exact){if(query.queryHash!==hashQueryKeyByOptions(queryKey,query.options))return!1}else if(!partialMatchKey(query.queryKey,queryKey))return!1;if("all"!==type){const isActive=query.isActive();if("active"===type&&!isActive)return!1;if("inactive"===type&&isActive)return!1}return("boolean"!=typeof stale||query.isStale()===stale)&&((!fetchStatus||fetchStatus===query.state.fetchStatus)&&!(predicate&&!predicate(query)))}function matchMutation(filters,mutation){const{exact,status,predicate,mutationKey}=filters;if(mutationKey){if(!mutation.options.mutationKey)return!1;if(exact){if(hashKey(mutation.options.mutationKey)!==hashKey(mutationKey))return!1}else if(!partialMatchKey(mutation.options.mutationKey,mutationKey))return!1}return(!status||mutation.state.status===status)&&!(predicate&&!predicate(mutation))}function hashQueryKeyByOptions(queryKey,options){return(options?.queryKeyHashFn||hashKey)(queryKey)}function hashKey(queryKey){return JSON.stringify(queryKey,((_,val)=>isPlainObject(val)?Object.keys(val).sort().reduce(((result,key)=>(result[key]=val[key],result)),{}):val))}function partialMatchKey(a,b){return a===b||typeof a==typeof b&&(!(!a||!b||"object"!=typeof a||"object"!=typeof b)&&!Object.keys(b).some((key=>!partialMatchKey(a[key],b[key]))))}function replaceEqualDeep(a,b){if(a===b)return a;const array=isPlainArray(a)&&isPlainArray(b);if(array||isPlainObject(a)&&isPlainObject(b)){const aItems=array?a:Object.keys(a),aSize=aItems.length,bItems=array?b:Object.keys(b),bSize=bItems.length,copy=array?[]:{};let equalItems=0;for(let i=0;i<bSize;i++){const key=array?i:bItems[i];(!array&&aItems.includes(key)||array)&&void 0===a[key]&&void 0===b[key]?(copy[key]=void 0,equalItems++):(copy[key]=replaceEqualDeep(a[key],b[key]),copy[key]===a[key]&&void 0!==a[key]&&equalItems++)}return aSize===bSize&&equalItems===aSize?a:copy}return b}function shallowEqualObjects(a,b){if(!b||Object.keys(a).length!==Object.keys(b).length)return!1;for(const key in a)if(a[key]!==b[key])return!1;return!0}function isPlainArray(value){return Array.isArray(value)&&value.length===Object.keys(value).length}function isPlainObject(o){if(!hasObjectPrototype(o))return!1;const ctor=o.constructor;if(void 0===ctor)return!0;const prot=ctor.prototype;return!!hasObjectPrototype(prot)&&(!!prot.hasOwnProperty("isPrototypeOf")&&Object.getPrototypeOf(o)===Object.prototype)}function hasObjectPrototype(o){return"[object Object]"===Object.prototype.toString.call(o)}function sleep(timeout){return new Promise((resolve=>{setTimeout(resolve,timeout)}))}function replaceData(prevData,data,options){return"function"==typeof options.structuralSharing?options.structuralSharing(prevData,data):!1!==options.structuralSharing?replaceEqualDeep(prevData,data):data}function addToEnd(items,item,max=0){const newItems=[...items,item];return max&&newItems.length>max?newItems.slice(1):newItems}function addToStart(items,item,max=0){const newItems=[item,...items];return max&&newItems.length>max?newItems.slice(0,-1):newItems}var skipToken=Symbol();function ensureQueryFn(options,fetchOptions){return!options.queryFn&&fetchOptions?.initialPromise?()=>fetchOptions.initialPromise:options.queryFn&&options.queryFn!==skipToken?options.queryFn:()=>Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))}},"./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ht:()=>QueryClientProvider,jE:()=>useQueryClient});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),QueryClientContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0),useQueryClient=queryClient=>{const client=react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);if(queryClient)return queryClient;if(!client)throw new Error("No QueryClient set, use QueryClientProvider to set one");return client},QueryClientProvider=({client,children})=>(react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>(client.mount(),()=>{client.unmount()})),[client]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider,{value:client,children}))},"./node_modules/@trpc/client/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function observable_observable(subscribe){const self={subscribe(observer){let teardownRef=null,isDone=!1,unsubscribed=!1,teardownImmediately=!1;function unsubscribe(){null!==teardownRef?unsubscribed||(unsubscribed=!0,"function"==typeof teardownRef?teardownRef():teardownRef&&teardownRef.unsubscribe()):teardownImmediately=!0}return teardownRef=subscribe({next(value){isDone||observer.next?.(value)},error(err){isDone||(isDone=!0,observer.error?.(err),unsubscribe())},complete(){isDone||(isDone=!0,observer.complete?.(),unsubscribe())}}),teardownImmediately&&unsubscribe(),{unsubscribe}},pipe:(...operations)=>operations.reduce(pipeReducer,self)};return self}function pipeReducer(prev,fn){return fn(prev)}function share(_opts){return source=>{let refCount=0,subscription=null;const observers=[];return observable_observable((subscriber=>(refCount++,observers.push(subscriber),function startIfNeeded(){subscription||(subscription=source.subscribe({next(value){for(const observer of observers)observer.next?.(value)},error(error){for(const observer of observers)observer.error?.(error)},complete(){for(const observer of observers)observer.complete?.()}}))}(),{unsubscribe(){refCount--,function resetIfNeeded(){if(0===refCount&&subscription){const _sub=subscription;subscription=null,_sub.unsubscribe()}}();const index=observers.findIndex((v=>v===subscriber));index>-1&&observers.splice(index,1)}})))}}__webpack_require__.d(__webpack_exports__,{Ke:()=>TRPCUntypedClient_TRPCUntypedClient,Xq:()=>createTRPCClientProxy,u4:()=>createTRPCUntypedClient,n2:()=>getUntypedClient,$H:()=>loggerLink,kM:()=>unstable_httpBatchStreamLink});Symbol();var unstable_core_do_not_import=__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import.mjs");class TRPCClientError_TRPCClientError extends Error{static from(_cause,opts={}){const cause=_cause;return function isTRPCClientError(cause){return cause instanceof TRPCClientError_TRPCClientError||cause instanceof Error&&"TRPCClientError"===cause.name}(cause)?(opts.meta&&(cause.meta={...cause.meta,...opts.meta}),cause):function isTRPCErrorResponse(obj){return(0,unstable_core_do_not_import.Gv)(obj)&&(0,unstable_core_do_not_import.Gv)(obj.error)&&"number"==typeof obj.error.code&&"string"==typeof obj.error.message}(cause)?new TRPCClientError_TRPCClientError(cause.error.message,{...opts,result:cause}):new TRPCClientError_TRPCClientError(function getMessageFromUnknownError(err,fallback){return"string"==typeof err?err:(0,unstable_core_do_not_import.Gv)(err)&&"string"==typeof err.message?err.message:fallback}(cause,"Unknown error"),{...opts,cause})}constructor(message,opts){const cause=opts?.cause;super(message,{cause}),_define_property(this,"cause",void 0),_define_property(this,"shape",void 0),_define_property(this,"data",void 0),_define_property(this,"meta",void 0),this.meta=opts?.meta,this.cause=cause,this.shape=opts?.result?.error,this.data=opts?.result?.error.data,this.name="TRPCClientError",Object.setPrototypeOf(this,TRPCClientError_TRPCClientError.prototype)}}class TRPCUntypedClient_TRPCUntypedClient{$request(opts){const chain$=function createChain_createChain(opts){return observable_observable((observer=>function execute(index=0,op=opts.op){const next=opts.links[index];if(!next)throw new Error("No more links to execute - did you forget to add an ending link?");return next({op,next:nextOp=>execute(index+1,nextOp)})}().subscribe(observer)))}({links:this.links,op:{...opts,context:opts.context??{},id:++this.requestId}});return chain$.pipe(share())}async requestAsPromise(opts){try{const req$=this.$request(opts),envelope=await function observableToPromise(observable){const ac=new AbortController;return new Promise(((resolve,reject)=>{let isDone=!1;function onDone(){isDone||(isDone=!0,obs$.unsubscribe())}ac.signal.addEventListener("abort",(()=>{reject(ac.signal.reason)}));const obs$=observable.subscribe({next(data){isDone=!0,resolve(data),onDone()},error(data){reject(data)},complete(){ac.abort(),onDone()}})}))}(req$);return envelope.result.data}catch(err){throw TRPCClientError_TRPCClientError.from(err)}}query(path,input,opts){return this.requestAsPromise({type:"query",path,input,context:opts?.context,signal:opts?.signal})}mutation(path,input,opts){return this.requestAsPromise({type:"mutation",path,input,context:opts?.context,signal:opts?.signal})}subscription(path,input,opts){return this.$request({type:"subscription",path,input,context:opts.context,signal:opts.signal}).subscribe({next(envelope){switch(envelope.result.type){case"state":opts.onConnectionStateChange?.(envelope.result);break;case"started":opts.onStarted?.({context:envelope.context});break;case"stopped":opts.onStopped?.();break;case"data":case void 0:opts.onData?.(envelope.result.data)}},error(err){opts.onError?.(err)},complete(){opts.onComplete?.()}})}constructor(opts){_define_property(this,"links",void 0),_define_property(this,"runtime",void 0),_define_property(this,"requestId",void 0),this.requestId=0,this.runtime={},this.links=opts.links.map((link=>link(this.runtime)))}}function createTRPCUntypedClient(opts){return new TRPCUntypedClient_TRPCUntypedClient(opts)}const clientCallTypeMap={query:"query",mutate:"mutation",subscribe:"subscription"},clientCallTypeToProcedureType=clientCallType=>clientCallTypeMap[clientCallType];function createTRPCClientProxy(client){const proxy=(0,unstable_core_do_not_import.vX)((({path,args})=>{const pathCopy=[...path],procedureType=clientCallTypeToProcedureType(pathCopy.pop()),fullPath=pathCopy.join(".");return client[procedureType](fullPath,...args)}));return(0,unstable_core_do_not_import.U6)((key=>client.hasOwnProperty(key)?client[key]:"__untypedClient"===key?client:proxy[key]))}function getUntypedClient(client){return client.__untypedClient}const isFunction=fn=>"function"==typeof fn;const METHOD={query:"GET",mutation:"POST",subscription:"PATCH"};function httpUtils_getInput(opts){return"input"in opts?opts.transformer.input.serialize(opts.input):function arrayToDict(array){const dict={};for(let index=0;index<array.length;index++){const element=array[index];dict[index]=element}return dict}(opts.inputs.map((_input=>opts.transformer.input.serialize(_input))))}const httpUtils_getUrl=opts=>{const parts=opts.url.split("?");let url=parts[0].replace(/\/$/,"")+"/"+opts.path;const queryParts=[];if(parts[1]&&queryParts.push(parts[1]),"inputs"in opts&&queryParts.push("batch=1"),"query"===opts.type||"subscription"===opts.type){const input=httpUtils_getInput(opts);void 0!==input&&"POST"!==opts.methodOverride&&queryParts.push(`input=${encodeURIComponent(JSON.stringify(input))}`)}return queryParts.length&&(url+="?"+queryParts.join("&")),url},getBody=opts=>{if("query"===opts.type&&"POST"!==opts.methodOverride)return;const input=httpUtils_getInput(opts);return void 0!==input?JSON.stringify(input):void 0};class AbortError extends Error{constructor(){const name="AbortError";super(name),this.name=name,this.message=name}}const throwIfAborted=signal=>{if(signal?.aborted){if(signal.throwIfAborted?.(),"undefined"!=typeof DOMException)throw new DOMException("AbortError","AbortError");throw new AbortError}};async function fetchHTTPResponse(opts){throwIfAborted(opts.signal);const url=opts.getUrl(opts),body=opts.getBody(opts),{type}=opts,resolvedHeaders=await(async()=>{const heads=await opts.headers();return Symbol.iterator in heads?Object.fromEntries(heads):heads})(),headers={...opts.contentTypeHeader?{"content-type":opts.contentTypeHeader}:{},...opts.trpcAcceptHeader?{"trpc-accept":opts.trpcAcceptHeader}:void 0,...resolvedHeaders};return function getFetch(customFetchImpl){if(customFetchImpl)return customFetchImpl;if("undefined"!=typeof window&&isFunction(window.fetch))return window.fetch;if("undefined"!=typeof globalThis&&isFunction(globalThis.fetch))return globalThis.fetch;throw new Error("No fetch implementation found")}(opts.fetch)(url,{method:opts.methodOverride??METHOD[type],signal:opts.signal,body,headers})}const throwFatalError=()=>{throw new Error("Something went wrong. Please submit an issue at https://github.com/trpc/trpc/issues/new")};function dataLoader_dataLoader(batchLoader){let pendingItems=null,dispatchTimer=null;function dispatch(){const groupedItems=function groupItems(items){const groupedItems=[[]];let index=0;for(;;){const item=items[index];if(!item)break;const lastGroup=groupedItems[groupedItems.length-1];item.aborted?(item.reject?.(new Error("Aborted")),index++):batchLoader.validate(lastGroup.concat(item).map((it=>it.key)))?(lastGroup.push(item),index++):0!==lastGroup.length?groupedItems.push([]):(item.reject?.(new Error("Input is too big for a single dispatch")),index++)}return groupedItems}(pendingItems);clearTimeout(dispatchTimer),dispatchTimer=null,pendingItems=null;for(const items of groupedItems){if(!items.length)continue;const batch={items};for(const item of items)item.batch=batch;batchLoader.fetch(batch.items.map((_item=>_item.key))).then((async result=>{await Promise.all(result.map((async(valueOrPromise,index)=>{const item=batch.items[index];try{const value=await Promise.resolve(valueOrPromise);item.resolve?.(value)}catch(cause){item.reject?.(cause)}item.batch=null,item.reject=null,item.resolve=null})));for(const item of batch.items)item.reject?.(new Error("Missing result")),item.batch=null})).catch((cause=>{for(const item of batch.items)item.reject?.(cause),item.batch=null}))}}return{load:function load(key){const item={aborted:!1,key,batch:null,resolve:throwFatalError,reject:throwFatalError},promise=new Promise(((resolve,reject)=>{item.reject=reject,item.resolve=resolve,pendingItems||(pendingItems=[]),pendingItems.push(item)}));return dispatchTimer||(dispatchTimer=setTimeout(dispatch)),promise}}}function signals_raceAbortSignals(...signals){const ac=new AbortController;for(const signal of signals)signal?.aborted?ac.abort():signal?.addEventListener("abort",(()=>ac.abort()),{once:!0});return ac.signal}function unstable_httpBatchStreamLink(opts){const resolvedOpts=function httpUtils_resolveHTTPLinkOptions(opts){return{url:opts.url.toString(),fetch:opts.fetch,transformer:(transformer=opts.transformer,transformer?"input"in transformer?transformer:{input:transformer,output:transformer}:{input:{serialize:data=>data,deserialize:data=>data},output:{serialize:data=>data,deserialize:data=>data}}),methodOverride:opts.methodOverride};var transformer}(opts),maxURLLength=opts.maxURLLength??1/0,maxItems=opts.maxItems??1/0;return()=>{const batchLoader=type=>({validate(batchOps){if(maxURLLength===1/0&&maxItems===1/0)return!0;if(batchOps.length>maxItems)return!1;const path=batchOps.map((op=>op.path)).join(","),inputs=batchOps.map((op=>op.input));return httpUtils_getUrl({...resolvedOpts,type,path,inputs,signal:null}).length<=maxURLLength},async fetch(batchOps){const path=batchOps.map((op=>op.path)).join(","),inputs=batchOps.map((op=>op.input)),batchSignals=function signals_allAbortSignals(...signals){const ac=new AbortController,count=signals.length;let abortedCount=0;const onAbort=()=>{++abortedCount===count&&ac.abort()};for(const signal of signals)signal?.aborted?onAbort():signal?.addEventListener("abort",onAbort,{once:!0});return ac.signal}(...batchOps.map((op=>op.signal))),abortController=new AbortController,responsePromise=fetchHTTPResponse({...resolvedOpts,signal:signals_raceAbortSignals(batchSignals,abortController.signal),type,contentTypeHeader:"application/json",trpcAcceptHeader:"application/jsonl",getUrl:httpUtils_getUrl,getBody,inputs,path,headers:()=>opts.headers?"function"==typeof opts.headers?opts.headers({opList:batchOps}):opts.headers:{}}),res=await responsePromise,[head]=await(0,unstable_core_do_not_import.le)({from:res.body,deserialize:resolvedOpts.transformer.output.deserialize,formatError(opts){const error=opts.error;return TRPCClientError_TRPCClientError.from({error})},abortController});return Object.keys(batchOps).map((async key=>{let json=await Promise.resolve(head[key]);if("result"in json){const result=await Promise.resolve(json.result);json={result:{data:await Promise.resolve(result.data)}}}return{json,meta:{response:res}}}))}}),loaders={query:dataLoader_dataLoader(batchLoader("query")),mutation:dataLoader_dataLoader(batchLoader("mutation"))};return({op})=>observable_observable((observer=>{if("subscription"===op.type)throw new Error("Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`");let _res;return loaders[op.type].load(op).then((res=>{if(_res=res,!("error"in res.json))return"result"in res.json?(observer.next({context:res.meta,result:res.json.result}),void observer.complete()):void observer.complete();observer.error(TRPCClientError_TRPCClientError.from(res.json,{meta:res.meta}))})).catch((err=>{observer.error(TRPCClientError_TRPCClientError.from(err,{meta:_res?.meta}))})),()=>{}}))}}var console=__webpack_require__("./node_modules/console-browserify/index.js");const palettes={css:{query:["72e3ff","3fb0d8"],mutation:["c5a3fc","904dfc"],subscription:["ff49e1","d83fbe"]},ansi:{regular:{query:["[30;46m","[97;46m"],mutation:["[30;45m","[97;45m"],subscription:["[30;42m","[97;42m"]},bold:{query:["[1;30;46m","[1;97;46m"],mutation:["[1;30;45m","[1;97;45m"],subscription:["[1;30;42m","[1;97;42m"]}}};const defaultLogger=({c=console,colorMode="css",withContext})=>props=>{const rawInput=props.input,input=function loggerLink_isFormData(value){return"undefined"!=typeof FormData&&value instanceof FormData}(rawInput)?Object.fromEntries(rawInput):rawInput,{parts,args}=function constructPartsAndArgs(opts){const{direction,type,withContext,path,id,input}=opts,parts=[],args=[];if("none"===opts.colorMode)parts.push("up"===direction?">>":"<<",type,`#${id}`,path);else if("ansi"===opts.colorMode){const[lightRegular,darkRegular]=palettes.ansi.regular[type],[lightBold,darkBold]=palettes.ansi.bold[type],reset="[0m";parts.push("up"===direction?lightRegular:darkRegular,"up"===direction?">>":"<<",type,"up"===direction?lightBold:darkBold,`#${id}`,path,reset)}else{const[light,dark]=palettes.css[type],css=`\n    background-color: #${"up"===direction?light:dark};\n    color: ${"up"===direction?"black":"white"};\n    padding: 2px;\n  `;parts.push("%c","up"===direction?">>":"<<",type,`#${id}`,`%c${path}%c`,"%O"),args.push(css,`${css}; font-weight: bold;`,`${css}; font-weight: normal;`)}return"up"===direction?args.push(withContext?{input,context:opts.context}:{input}):args.push({input,result:opts.result,elapsedMs:opts.elapsedMs,...withContext&&{context:opts.context}}),{parts,args}}({...props,colorMode,input,withContext}),fn="down"===props.direction&&props.result&&(props.result instanceof Error||"error"in props.result.result&&props.result.result.error)?"error":"log";c[fn].apply(null,[parts.join(" ")].concat(args))};function loggerLink(opts={}){const{enabled=()=>!0}=opts,colorMode=opts.colorMode??("undefined"==typeof window?"ansi":"css"),withContext=opts.withContext??"css"===colorMode,{logger=defaultLogger({c:opts.console,colorMode,withContext})}=opts;return()=>({op,next})=>observable_observable((observer=>{enabled({...op,direction:"up"})&&logger({...op,direction:"up"});const requestStartTime=Date.now();function logResult(result){const elapsedMs=Date.now()-requestStartTime;enabled({...op,direction:"down",result})&&logger({...op,direction:"down",elapsedMs,result})}return next(op).pipe(function tap(observer){return source=>observable_observable((destination=>source.subscribe({next(value){observer.next?.(value),destination.next(value)},error(error){observer.error?.(error),destination.error(error)},complete(){observer.complete?.(),destination.complete()}})))}({next(result){logResult(result)},error(result){logResult(result)}})).subscribe(observer)}))}Error;var codes=__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/rpc/codes.mjs");__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/rpc/parseTRPCMessage.mjs"),__webpack_require__("./node_modules/@trpc/server/dist/vendor/unpromise/unpromise.mjs"),__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/stream/utils/timerResource.mjs"),__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/rootConfig.mjs");codes.Y.BAD_GATEWAY,codes.Y.SERVICE_UNAVAILABLE,codes.Y.GATEWAY_TIMEOUT,codes.Y.INTERNAL_SERVER_ERROR},"./node_modules/@trpc/react-query/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{pY:()=>createTRPCReact});var dist=__webpack_require__("./node_modules/@trpc/client/dist/index.mjs"),utils=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/utils.js"),unstable_core_do_not_import=__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import.mjs");function getQueryKeyInternal(path,input,type){const splitPath=path.flatMap((part=>part.split(".")));if(!(input||type&&"any"!==type))return splitPath.length?[splitPath]:[];if("infinite"===type&&(0,unstable_core_do_not_import.Gv)(input)&&("direction"in input||"cursor"in input)){const{cursor:_,direction:__,...inputWithoutCursorAndDirection}=input;return[splitPath,{input:inputWithoutCursorAndDirection,type:"infinite"}]}return[splitPath,{...void 0!==input&&input!==utils.hT&&{input},...type&&"any"!==type&&{type}}]}function getMutationKeyInternal(path){return getQueryKeyInternal(path,void 0,"any")}var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const contextProps=["client","ssrContext","ssrState","abortOnUnmount"],TRPCContext=react.createContext?.(null),getQueryType=utilName=>{switch(utilName){case"queryOptions":case"fetch":case"ensureData":case"prefetch":case"getData":case"setData":case"setQueriesData":return"query";case"infiniteQueryOptions":case"fetchInfinite":case"prefetchInfinite":case"getInfiniteData":case"setInfiniteData":return"infinite";case"setMutationDefaults":case"getMutationDefaults":case"isMutating":case"cancel":case"invalidate":case"refetch":case"reset":return"any"}};function createRecursiveUtilsProxy(context){return(0,unstable_core_do_not_import.vX)((opts=>{const path=[...opts.path],utilName=path.pop(),args=[...opts.args],input=args.shift(),queryType=getQueryType(utilName),queryKey=getQueryKeyInternal(path,input,queryType);return{infiniteQueryOptions:()=>context.infiniteQueryOptions(path,queryKey,args[0]),queryOptions:()=>context.queryOptions(path,queryKey,...args),fetch:()=>context.fetchQuery(queryKey,...args),fetchInfinite:()=>context.fetchInfiniteQuery(queryKey,args[0]),prefetch:()=>context.prefetchQuery(queryKey,...args),prefetchInfinite:()=>context.prefetchInfiniteQuery(queryKey,args[0]),ensureData:()=>context.ensureQueryData(queryKey,...args),invalidate:()=>context.invalidateQueries(queryKey,...args),reset:()=>context.resetQueries(queryKey,...args),refetch:()=>context.refetchQueries(queryKey,...args),cancel:()=>context.cancelQuery(queryKey,...args),setData:()=>{context.setQueryData(queryKey,args[0],args[1])},setQueriesData:()=>context.setQueriesData(queryKey,args[0],args[1],args[2]),setInfiniteData:()=>{context.setInfiniteQueryData(queryKey,args[0],args[1])},getData:()=>context.getQueryData(queryKey),getInfiniteData:()=>context.getInfiniteQueryData(queryKey),setMutationDefaults:()=>context.setMutationDefaults(getMutationKeyInternal(path),input),getMutationDefaults:()=>context.getMutationDefaults(getMutationKeyInternal(path)),isMutating:()=>context.isMutating({mutationKey:getMutationKeyInternal(path)})}[utilName]()}))}var focusManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/focusManager.js"),notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/notifyManager.js"),modern_query=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/query.js"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/subscribable.js"),thenable=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/thenable.js"),QueryObserver=class extends subscribable.Q{constructor(client,options){super(),this.options=options,this.#client=client,this.#selectError=null,this.#currentThenable=(0,thenable.T)(),this.options.experimental_prefetchInRender||this.#currentThenable.reject(new Error("experimental_prefetchInRender feature flag is not enabled")),this.bindMethods(),this.setOptions(options)}#client;#currentQuery=void 0;#currentQueryInitialState=void 0;#currentResult=void 0;#currentResultState;#currentResultOptions;#currentThenable;#selectError;#selectFn;#selectResult;#lastQueryWithDefinedData;#staleTimeoutId;#refetchIntervalId;#currentRefetchInterval;#trackedProps=new Set;bindMethods(){this.refetch=this.refetch.bind(this)}onSubscribe(){1===this.listeners.size&&(this.#currentQuery.addObserver(this),shouldFetchOnMount(this.#currentQuery,this.options)?this.#executeFetch():this.updateResult(),this.#updateTimers())}onUnsubscribe(){this.hasListeners()||this.destroy()}shouldFetchOnReconnect(){return shouldFetchOn(this.#currentQuery,this.options,this.options.refetchOnReconnect)}shouldFetchOnWindowFocus(){return shouldFetchOn(this.#currentQuery,this.options,this.options.refetchOnWindowFocus)}destroy(){this.listeners=new Set,this.#clearStaleTimeout(),this.#clearRefetchInterval(),this.#currentQuery.removeObserver(this)}setOptions(options,notifyOptions){const prevOptions=this.options,prevQuery=this.#currentQuery;if(this.options=this.#client.defaultQueryOptions(options),void 0!==this.options.enabled&&"boolean"!=typeof this.options.enabled&&"function"!=typeof this.options.enabled&&"boolean"!=typeof(0,utils.Eh)(this.options.enabled,this.#currentQuery))throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");this.#updateQuery(),this.#currentQuery.setOptions(this.options),prevOptions._defaulted&&!(0,utils.f8)(this.options,prevOptions)&&this.#client.getQueryCache().notify({type:"observerOptionsUpdated",query:this.#currentQuery,observer:this});const mounted=this.hasListeners();mounted&&shouldFetchOptionally(this.#currentQuery,prevQuery,this.options,prevOptions)&&this.#executeFetch(),this.updateResult(notifyOptions),!mounted||this.#currentQuery===prevQuery&&(0,utils.Eh)(this.options.enabled,this.#currentQuery)===(0,utils.Eh)(prevOptions.enabled,this.#currentQuery)&&(0,utils.d2)(this.options.staleTime,this.#currentQuery)===(0,utils.d2)(prevOptions.staleTime,this.#currentQuery)||this.#updateStaleTimeout();const nextRefetchInterval=this.#computeRefetchInterval();!mounted||this.#currentQuery===prevQuery&&(0,utils.Eh)(this.options.enabled,this.#currentQuery)===(0,utils.Eh)(prevOptions.enabled,this.#currentQuery)&&nextRefetchInterval===this.#currentRefetchInterval||this.#updateRefetchInterval(nextRefetchInterval)}getOptimisticResult(options){const query=this.#client.getQueryCache().build(this.#client,options),result=this.createResult(query,options);return function shouldAssignObserverCurrentProperties(observer,optimisticResult){if(!(0,utils.f8)(observer.getCurrentResult(),optimisticResult))return!0;return!1}(this,result)&&(this.#currentResult=result,this.#currentResultOptions=this.options,this.#currentResultState=this.#currentQuery.state),result}getCurrentResult(){return this.#currentResult}trackResult(result,onPropTracked){const trackedResult={};return Object.keys(result).forEach((key=>{Object.defineProperty(trackedResult,key,{configurable:!1,enumerable:!0,get:()=>(this.trackProp(key),onPropTracked?.(key),result[key])})})),trackedResult}trackProp(key){this.#trackedProps.add(key)}getCurrentQuery(){return this.#currentQuery}refetch({...options}={}){return this.fetch({...options})}fetchOptimistic(options){const defaultedOptions=this.#client.defaultQueryOptions(options),query=this.#client.getQueryCache().build(this.#client,defaultedOptions);return query.fetch().then((()=>this.createResult(query,defaultedOptions)))}fetch(fetchOptions){return this.#executeFetch({...fetchOptions,cancelRefetch:fetchOptions.cancelRefetch??!0}).then((()=>(this.updateResult(),this.#currentResult)))}#executeFetch(fetchOptions){this.#updateQuery();let promise=this.#currentQuery.fetch(this.options,fetchOptions);return fetchOptions?.throwOnError||(promise=promise.catch(utils.lQ)),promise}#updateStaleTimeout(){this.#clearStaleTimeout();const staleTime=(0,utils.d2)(this.options.staleTime,this.#currentQuery);if(utils.S$||this.#currentResult.isStale||!(0,utils.gn)(staleTime))return;const timeout=(0,utils.j3)(this.#currentResult.dataUpdatedAt,staleTime)+1;this.#staleTimeoutId=setTimeout((()=>{this.#currentResult.isStale||this.updateResult()}),timeout)}#computeRefetchInterval(){return("function"==typeof this.options.refetchInterval?this.options.refetchInterval(this.#currentQuery):this.options.refetchInterval)??!1}#updateRefetchInterval(nextInterval){this.#clearRefetchInterval(),this.#currentRefetchInterval=nextInterval,!utils.S$&&!1!==(0,utils.Eh)(this.options.enabled,this.#currentQuery)&&(0,utils.gn)(this.#currentRefetchInterval)&&0!==this.#currentRefetchInterval&&(this.#refetchIntervalId=setInterval((()=>{(this.options.refetchIntervalInBackground||focusManager.m.isFocused())&&this.#executeFetch()}),this.#currentRefetchInterval))}#updateTimers(){this.#updateStaleTimeout(),this.#updateRefetchInterval(this.#computeRefetchInterval())}#clearStaleTimeout(){this.#staleTimeoutId&&(clearTimeout(this.#staleTimeoutId),this.#staleTimeoutId=void 0)}#clearRefetchInterval(){this.#refetchIntervalId&&(clearInterval(this.#refetchIntervalId),this.#refetchIntervalId=void 0)}createResult(query,options){const prevQuery=this.#currentQuery,prevOptions=this.options,prevResult=this.#currentResult,prevResultState=this.#currentResultState,prevResultOptions=this.#currentResultOptions,queryInitialState=query!==prevQuery?query.state:this.#currentQueryInitialState,{state}=query;let data,newState={...state},isPlaceholderData=!1;if(options._optimisticResults){const mounted=this.hasListeners(),fetchOnMount=!mounted&&shouldFetchOnMount(query,options),fetchOptionally=mounted&&shouldFetchOptionally(query,prevQuery,options,prevOptions);(fetchOnMount||fetchOptionally)&&(newState={...newState,...(0,modern_query.k)(state.data,query.options)}),"isRestoring"===options._optimisticResults&&(newState.fetchStatus="idle")}let{error,errorUpdatedAt,status}=newState;if(options.select&&void 0!==newState.data)if(prevResult&&newState.data===prevResultState?.data&&options.select===this.#selectFn)data=this.#selectResult;else try{this.#selectFn=options.select,data=options.select(newState.data),data=(0,utils.pl)(prevResult?.data,data,options),this.#selectResult=data,this.#selectError=null}catch(selectError){this.#selectError=selectError}else data=newState.data;if(void 0!==options.placeholderData&&void 0===data&&"pending"===status){let placeholderData;if(prevResult?.isPlaceholderData&&options.placeholderData===prevResultOptions?.placeholderData)placeholderData=prevResult.data;else if(placeholderData="function"==typeof options.placeholderData?options.placeholderData(this.#lastQueryWithDefinedData?.state.data,this.#lastQueryWithDefinedData):options.placeholderData,options.select&&void 0!==placeholderData)try{placeholderData=options.select(placeholderData),this.#selectError=null}catch(selectError){this.#selectError=selectError}void 0!==placeholderData&&(status="success",data=(0,utils.pl)(prevResult?.data,placeholderData,options),isPlaceholderData=!0)}this.#selectError&&(error=this.#selectError,data=this.#selectResult,errorUpdatedAt=Date.now(),status="error");const isFetching="fetching"===newState.fetchStatus,isPending="pending"===status,isError="error"===status,isLoading=isPending&&isFetching,hasData=void 0!==data,nextResult={status,fetchStatus:newState.fetchStatus,isPending,isSuccess:"success"===status,isError,isInitialLoading:isLoading,isLoading,data,dataUpdatedAt:newState.dataUpdatedAt,error,errorUpdatedAt,failureCount:newState.fetchFailureCount,failureReason:newState.fetchFailureReason,errorUpdateCount:newState.errorUpdateCount,isFetched:newState.dataUpdateCount>0||newState.errorUpdateCount>0,isFetchedAfterMount:newState.dataUpdateCount>queryInitialState.dataUpdateCount||newState.errorUpdateCount>queryInitialState.errorUpdateCount,isFetching,isRefetching:isFetching&&!isPending,isLoadingError:isError&&!hasData,isPaused:"paused"===newState.fetchStatus,isPlaceholderData,isRefetchError:isError&&hasData,isStale:isStale(query,options),refetch:this.refetch,promise:this.#currentThenable};if(this.options.experimental_prefetchInRender){const finalizeThenableIfPossible=thenable=>{"error"===nextResult.status?thenable.reject(nextResult.error):void 0!==nextResult.data&&thenable.resolve(nextResult.data)},recreateThenable=()=>{const pending=this.#currentThenable=nextResult.promise=(0,thenable.T)();finalizeThenableIfPossible(pending)},prevThenable=this.#currentThenable;switch(prevThenable.status){case"pending":query.queryHash===prevQuery.queryHash&&finalizeThenableIfPossible(prevThenable);break;case"fulfilled":"error"!==nextResult.status&&nextResult.data===prevThenable.value||recreateThenable();break;case"rejected":"error"===nextResult.status&&nextResult.error===prevThenable.reason||recreateThenable()}}return nextResult}updateResult(notifyOptions){const prevResult=this.#currentResult,nextResult=this.createResult(this.#currentQuery,this.options);if(this.#currentResultState=this.#currentQuery.state,this.#currentResultOptions=this.options,void 0!==this.#currentResultState.data&&(this.#lastQueryWithDefinedData=this.#currentQuery),(0,utils.f8)(nextResult,prevResult))return;this.#currentResult=nextResult;const defaultNotifyOptions={};!1!==notifyOptions?.listeners&&(()=>{if(!prevResult)return!0;const{notifyOnChangeProps}=this.options,notifyOnChangePropsValue="function"==typeof notifyOnChangeProps?notifyOnChangeProps():notifyOnChangeProps;if("all"===notifyOnChangePropsValue||!notifyOnChangePropsValue&&!this.#trackedProps.size)return!0;const includedProps=new Set(notifyOnChangePropsValue??this.#trackedProps);return this.options.throwOnError&&includedProps.add("error"),Object.keys(this.#currentResult).some((key=>{const typedKey=key;return this.#currentResult[typedKey]!==prevResult[typedKey]&&includedProps.has(typedKey)}))})()&&(defaultNotifyOptions.listeners=!0),this.#notify({...defaultNotifyOptions,...notifyOptions})}#updateQuery(){const query=this.#client.getQueryCache().build(this.#client,this.options);if(query===this.#currentQuery)return;const prevQuery=this.#currentQuery;this.#currentQuery=query,this.#currentQueryInitialState=query.state,this.hasListeners()&&(prevQuery?.removeObserver(this),query.addObserver(this))}onQueryUpdate(){this.updateResult(),this.hasListeners()&&this.#updateTimers()}#notify(notifyOptions){notifyManager.j.batch((()=>{notifyOptions.listeners&&this.listeners.forEach((listener=>{listener(this.#currentResult)})),this.#client.getQueryCache().notify({query:this.#currentQuery,type:"observerResultsUpdated"})}))}};function shouldFetchOnMount(query,options){return function shouldLoadOnMount(query,options){return!1!==(0,utils.Eh)(options.enabled,query)&&void 0===query.state.data&&!("error"===query.state.status&&!1===options.retryOnMount)}(query,options)||void 0!==query.state.data&&shouldFetchOn(query,options,options.refetchOnMount)}function shouldFetchOn(query,options,field){if(!1!==(0,utils.Eh)(options.enabled,query)){const value="function"==typeof field?field(query):field;return"always"===value||!1!==value&&isStale(query,options)}return!1}function shouldFetchOptionally(query,prevQuery,options,prevOptions){return(query!==prevQuery||!1===(0,utils.Eh)(prevOptions.enabled,query))&&(!options.suspense||"error"!==query.state.status)&&isStale(query,options)}function isStale(query,options){return!1!==(0,utils.Eh)(options.enabled,query)&&query.isStaleByTime((0,utils.d2)(options.staleTime,query))}var QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js");__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");function createValue(){let isReset=!1;return{clearReset:()=>{isReset=!1},reset:()=>{isReset=!0},isReset:()=>isReset}}var QueryErrorResetBoundaryContext=react.createContext(createValue()),useQueryErrorResetBoundary=()=>react.useContext(QueryErrorResetBoundaryContext);function shouldThrowError(throwError,params){return"function"==typeof throwError?throwError(...params):!!throwError}function noop(){}var ensurePreventErrorBoundaryRetry=(options,errorResetBoundary)=>{(options.suspense||options.throwOnError||options.experimental_prefetchInRender)&&(errorResetBoundary.isReset()||(options.retryOnMount=!1))},useClearResetErrorBoundary=errorResetBoundary=>{react.useEffect((()=>{errorResetBoundary.clearReset()}),[errorResetBoundary])},getHasError=({result,errorResetBoundary,throwOnError,query})=>result.isError&&!errorResetBoundary.isReset()&&!result.isFetching&&query&&shouldThrowError(throwOnError,[result.error,query]),IsRestoringContext=react.createContext(!1),useIsRestoring=()=>react.useContext(IsRestoringContext),defaultThrowOnError=(IsRestoringContext.Provider,(_error,query)=>void 0===query.state.data),ensureSuspenseTimers=defaultedOptions=>{defaultedOptions.suspense&&(void 0===defaultedOptions.staleTime&&(defaultedOptions.staleTime=1e3),"number"==typeof defaultedOptions.gcTime&&(defaultedOptions.gcTime=Math.max(defaultedOptions.gcTime,1e3)))},willFetch=(result,isRestoring)=>result.isLoading&&result.isFetching&&!isRestoring,shouldSuspend=(defaultedOptions,result)=>defaultedOptions?.suspense&&result.isPending,fetchOptimistic=(defaultedOptions,observer,errorResetBoundary)=>observer.fetchOptimistic(defaultedOptions).catch((()=>{errorResetBoundary.clearReset()}));function useBaseQuery(options,Observer,queryClient){const client=(0,QueryClientProvider.jE)(queryClient),isRestoring=useIsRestoring(),errorResetBoundary=useQueryErrorResetBoundary(),defaultedOptions=client.defaultQueryOptions(options);client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions),defaultedOptions._optimisticResults=isRestoring?"isRestoring":"optimistic",ensureSuspenseTimers(defaultedOptions),ensurePreventErrorBoundaryRetry(defaultedOptions,errorResetBoundary),useClearResetErrorBoundary(errorResetBoundary);const isNewCacheEntry=!client.getQueryCache().get(defaultedOptions.queryHash),[observer]=react.useState((()=>new Observer(client,defaultedOptions))),result=observer.getOptimisticResult(defaultedOptions);if(react.useSyncExternalStore(react.useCallback((onStoreChange=>{const unsubscribe=isRestoring?noop:observer.subscribe(notifyManager.j.batchCalls(onStoreChange));return observer.updateResult(),unsubscribe}),[observer,isRestoring]),(()=>observer.getCurrentResult()),(()=>observer.getCurrentResult())),react.useEffect((()=>{observer.setOptions(defaultedOptions,{listeners:!1})}),[defaultedOptions,observer]),shouldSuspend(defaultedOptions,result))throw fetchOptimistic(defaultedOptions,observer,errorResetBoundary);if(getHasError({result,errorResetBoundary,throwOnError:defaultedOptions.throwOnError,query:client.getQueryCache().get(defaultedOptions.queryHash)}))throw result.error;if(client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions,result),defaultedOptions.experimental_prefetchInRender&&!utils.S$&&willFetch(result,isRestoring)){const promise=isNewCacheEntry?fetchOptimistic(defaultedOptions,observer,errorResetBoundary):client.getQueryCache().get(defaultedOptions.queryHash)?.promise;promise?.catch(noop).finally((()=>{observer.updateResult()}))}return defaultedOptions.notifyOnChangeProps?result:observer.trackResult(result)}var mutation=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/mutation.js"),MutationObserver=class extends subscribable.Q{#client;#currentResult=void 0;#currentMutation;#mutateOptions;constructor(client,options){super(),this.#client=client,this.setOptions(options),this.bindMethods(),this.#updateResult()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(options){const prevOptions=this.options;this.options=this.#client.defaultMutationOptions(options),(0,utils.f8)(this.options,prevOptions)||this.#client.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.#currentMutation,observer:this}),prevOptions?.mutationKey&&this.options.mutationKey&&(0,utils.EN)(prevOptions.mutationKey)!==(0,utils.EN)(this.options.mutationKey)?this.reset():"pending"===this.#currentMutation?.state.status&&this.#currentMutation.setOptions(this.options)}onUnsubscribe(){this.hasListeners()||this.#currentMutation?.removeObserver(this)}onMutationUpdate(action){this.#updateResult(),this.#notify(action)}getCurrentResult(){return this.#currentResult}reset(){this.#currentMutation?.removeObserver(this),this.#currentMutation=void 0,this.#updateResult(),this.#notify()}mutate(variables,options){return this.#mutateOptions=options,this.#currentMutation?.removeObserver(this),this.#currentMutation=this.#client.getMutationCache().build(this.#client,this.options),this.#currentMutation.addObserver(this),this.#currentMutation.execute(variables)}#updateResult(){const state=this.#currentMutation?.state??(0,mutation.$)();this.#currentResult={...state,isPending:"pending"===state.status,isSuccess:"success"===state.status,isError:"error"===state.status,isIdle:"idle"===state.status,mutate:this.mutate,reset:this.reset}}#notify(action){notifyManager.j.batch((()=>{if(this.#mutateOptions&&this.hasListeners()){const variables=this.#currentResult.variables,context=this.#currentResult.context;"success"===action?.type?(this.#mutateOptions.onSuccess?.(action.data,variables,context),this.#mutateOptions.onSettled?.(action.data,null,variables,context)):"error"===action?.type&&(this.#mutateOptions.onError?.(action.error,variables,context),this.#mutateOptions.onSettled?.(void 0,action.error,variables,context))}this.listeners.forEach((listener=>{listener(this.#currentResult)}))}))}};var infiniteQueryBehavior=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js"),InfiniteQueryObserver=class extends QueryObserver{constructor(client,options){super(client,options)}bindMethods(){super.bindMethods(),this.fetchNextPage=this.fetchNextPage.bind(this),this.fetchPreviousPage=this.fetchPreviousPage.bind(this)}setOptions(options,notifyOptions){super.setOptions({...options,behavior:(0,infiniteQueryBehavior.PL)()},notifyOptions)}getOptimisticResult(options){return options.behavior=(0,infiniteQueryBehavior.PL)(),super.getOptimisticResult(options)}fetchNextPage(options){return this.fetch({...options,meta:{fetchMore:{direction:"forward"}}})}fetchPreviousPage(options){return this.fetch({...options,meta:{fetchMore:{direction:"backward"}}})}createResult(query,options){const{state}=query,parentResult=super.createResult(query,options),{isFetching,isRefetching,isError,isRefetchError}=parentResult,fetchDirection=state.fetchMeta?.fetchMore?.direction,isFetchNextPageError=isError&&"forward"===fetchDirection,isFetchingNextPage=isFetching&&"forward"===fetchDirection,isFetchPreviousPageError=isError&&"backward"===fetchDirection,isFetchingPreviousPage=isFetching&&"backward"===fetchDirection;return{...parentResult,fetchNextPage:this.fetchNextPage,fetchPreviousPage:this.fetchPreviousPage,hasNextPage:(0,infiniteQueryBehavior.rB)(options,state.data),hasPreviousPage:(0,infiniteQueryBehavior.RQ)(options,state.data),isFetchNextPageError,isFetchingNextPage,isFetchPreviousPageError,isFetchingPreviousPage,isRefetchError:isRefetchError&&!isFetchNextPageError&&!isFetchPreviousPageError,isRefetching:isRefetching&&!isFetchingNextPage&&!isFetchingPreviousPage}}};function difference(array1,array2){return array1.filter((x=>!array2.includes(x)))}var QueriesObserver=class extends subscribable.Q{#client;#result;#queries;#options;#observers;#combinedResult;#lastCombine;#lastResult;constructor(client,queries,options){super(),this.#client=client,this.#options=options,this.#queries=[],this.#observers=[],this.#result=[],this.setQueries(queries)}onSubscribe(){1===this.listeners.size&&this.#observers.forEach((observer=>{observer.subscribe((result=>{this.#onUpdate(observer,result)}))}))}onUnsubscribe(){this.listeners.size||this.destroy()}destroy(){this.listeners=new Set,this.#observers.forEach((observer=>{observer.destroy()}))}setQueries(queries,options,notifyOptions){this.#queries=queries,this.#options=options,notifyManager.j.batch((()=>{const prevObservers=this.#observers,newObserverMatches=this.#findMatchingObservers(this.#queries);newObserverMatches.forEach((match=>match.observer.setOptions(match.defaultedQueryOptions,notifyOptions)));const newObservers=newObserverMatches.map((match=>match.observer)),newResult=newObservers.map((observer=>observer.getCurrentResult())),hasIndexChange=newObservers.some(((observer,index)=>observer!==prevObservers[index]));(prevObservers.length!==newObservers.length||hasIndexChange)&&(this.#observers=newObservers,this.#result=newResult,this.hasListeners()&&(difference(prevObservers,newObservers).forEach((observer=>{observer.destroy()})),difference(newObservers,prevObservers).forEach((observer=>{observer.subscribe((result=>{this.#onUpdate(observer,result)}))})),this.#notify()))}))}getCurrentResult(){return this.#result}getQueries(){return this.#observers.map((observer=>observer.getCurrentQuery()))}getObservers(){return this.#observers}getOptimisticResult(queries,combine){const result=this.#findMatchingObservers(queries).map((match=>match.observer.getOptimisticResult(match.defaultedQueryOptions)));return[result,r=>this.#combineResult(r??result,combine),()=>this.#trackResult(result,queries)]}#trackResult(result,queries){const matches=this.#findMatchingObservers(queries);return matches.map(((match,index)=>{const observerResult=result[index];return match.defaultedQueryOptions.notifyOnChangeProps?observerResult:match.observer.trackResult(observerResult,(accessedProp=>{matches.forEach((m=>{m.observer.trackProp(accessedProp)}))}))}))}#combineResult(input,combine){return combine?(this.#combinedResult&&this.#result===this.#lastResult&&combine===this.#lastCombine||(this.#lastCombine=combine,this.#lastResult=this.#result,this.#combinedResult=(0,utils.BH)(this.#combinedResult,combine(input))),this.#combinedResult):input}#findMatchingObservers(queries){const prevObserversMap=new Map(this.#observers.map((observer=>[observer.options.queryHash,observer]))),observers=[];return queries.forEach((options=>{const defaultedOptions=this.#client.defaultQueryOptions(options),match=prevObserversMap.get(defaultedOptions.queryHash);if(match)observers.push({defaultedQueryOptions:defaultedOptions,observer:match});else{const existingObserver=this.#observers.find((o=>o.options.queryHash===defaultedOptions.queryHash));observers.push({defaultedQueryOptions:defaultedOptions,observer:existingObserver??new QueryObserver(this.#client,defaultedOptions)})}})),observers.sort(((a,b)=>queries.findIndex((q=>q.queryHash===a.defaultedQueryOptions.queryHash))-queries.findIndex((q=>q.queryHash===b.defaultedQueryOptions.queryHash))))}#onUpdate(observer,result){const index=this.#observers.indexOf(observer);-1!==index&&(this.#result=function replaceAt(array,index,value){const copy=array.slice(0);return copy[index]=value,copy}(this.#result,index,result),this.#notify())}#notify(){if(this.hasListeners()){this.#combinedResult!==this.#combineResult(this.#trackResult(this.#result,this.#queries),this.#options?.combine)&&notifyManager.j.batch((()=>{this.listeners.forEach((listener=>{listener(this.#result)}))}))}}};function useQueries({queries,...options},queryClient){const client=(0,QueryClientProvider.jE)(queryClient),isRestoring=useIsRestoring(),errorResetBoundary=useQueryErrorResetBoundary(),defaultedQueries=react.useMemo((()=>queries.map((opts=>{const defaultedOptions=client.defaultQueryOptions(opts);return defaultedOptions._optimisticResults=isRestoring?"isRestoring":"optimistic",defaultedOptions}))),[queries,client,isRestoring]);defaultedQueries.forEach((query=>{ensureSuspenseTimers(query),ensurePreventErrorBoundaryRetry(query,errorResetBoundary)})),useClearResetErrorBoundary(errorResetBoundary);const[observer]=react.useState((()=>new QueriesObserver(client,defaultedQueries,options))),[optimisticResult,getCombinedResult,trackResult]=observer.getOptimisticResult(defaultedQueries,options.combine);react.useSyncExternalStore(react.useCallback((onStoreChange=>isRestoring?noop:observer.subscribe(notifyManager.j.batchCalls(onStoreChange))),[observer,isRestoring]),(()=>observer.getCurrentResult()),(()=>observer.getCurrentResult())),react.useEffect((()=>{observer.setQueries(defaultedQueries,options,{listeners:!1})}),[defaultedQueries,options,observer]);const suspensePromises=optimisticResult.some(((result,index)=>shouldSuspend(defaultedQueries[index],result)))?optimisticResult.flatMap(((result,index)=>{const opts=defaultedQueries[index];if(opts){const queryObserver=new QueryObserver(client,opts);if(shouldSuspend(opts,result))return fetchOptimistic(opts,queryObserver,errorResetBoundary);willFetch(result,isRestoring)&&fetchOptimistic(opts,queryObserver,errorResetBoundary)}return[]})):[];if(suspensePromises.length>0)throw Promise.all(suspensePromises);const firstSingleResultWhichShouldThrow=optimisticResult.find(((result,index)=>{const query=defaultedQueries[index];return query&&getHasError({result,errorResetBoundary,throwOnError:query.throwOnError,query:client.getQueryCache().get(query.queryHash)})}));if(firstSingleResultWhichShouldThrow?.error)throw firstSingleResultWhichShouldThrow.error;return getCombinedResult(trackResult())}function getClientArgs(queryKey,opts,infiniteParams){const path=queryKey[0];let input=queryKey[1]?.input;return infiniteParams&&(input={...input??{},...infiniteParams.pageParam?{cursor:infiniteParams.pageParam}:{},direction:infiniteParams.direction}),[path.join("."),input,opts?.trpc]}function createTRPCOptionsResult(value){return{path:value.path.join(".")}}function useHookResult(value){const result=createTRPCOptionsResult(value);return react.useMemo((()=>result),[result])}async function buildQueryFromAsyncIterable(asyncIterable,queryClient,queryKey){const query=queryClient.getQueryCache().build(queryClient,{queryKey});query.setState({data:[],status:"success"});const aggregate=[];for await(const value of asyncIterable)aggregate.push(value),query.setState({data:[...aggregate]});return aggregate}function createUseQueries(client){return(0,unstable_core_do_not_import.vX)((opts=>{const arrayPath=opts.path,dotPath=arrayPath.join("."),[input,_opts]=opts.args;return{queryKey:getQueryKeyInternal(arrayPath,input,"query"),queryFn:()=>client.query(dotPath,input,_opts?.trpc),..._opts}}))}const trackResult=(result,onTrackResult)=>new Proxy(result,{get:(target,prop)=>(onTrackResult(prop),target[prop])});function createRootHooks(config){const mutationSuccessOverride=config?.overrides?.useMutation?.onSuccess??(options=>options.originalFn()),Context=config?.context??TRPCContext;function useContext(){const context=react.useContext(Context);if(!context)throw new Error("Unable to find tRPC Context. Did you forget to wrap your App inside `withTRPC` HoC?");return context}function useSSRQueryOptionsIfNeeded(queryKey,opts){const{queryClient,ssrState}=useContext();return ssrState&&"mounted"!==ssrState&&"error"===queryClient.getQueryCache().find({queryKey})?.state.status?{retryOnMount:!1,...opts}:opts}return{Provider:props=>{const{abortOnUnmount=!1,client,queryClient,ssrContext}=props,[ssrState,setSSRState]=react.useState(props.ssrState??!1),fns=react.useMemo((()=>function createUtilityFunctions_createUtilityFunctions(opts){const{client,queryClient}=opts,untypedClient=client instanceof dist.Ke?client:(0,dist.n2)(client);return{infiniteQueryOptions:(path,queryKey,opts)=>{const inputIsSkipToken=queryKey[1]?.input===utils.hT;return Object.assign({...opts,initialData:opts?.initialData,queryKey,queryFn:inputIsSkipToken?utils.hT:async queryFnContext=>{const actualOpts={...opts,trpc:{...opts?.trpc,...opts?.trpc?.abortOnUnmount?{signal:queryFnContext.signal}:{signal:null}}};return await untypedClient.query(...getClientArgs(queryKey,actualOpts,{direction:queryFnContext.direction,pageParam:queryFnContext.pageParam}))},initialPageParam:opts?.initialCursor??null},{trpc:createTRPCOptionsResult({path})})},queryOptions:(path,queryKey,opts)=>{const inputIsSkipToken=queryKey[1]?.input===utils.hT;return Object.assign({...opts,initialData:opts?.initialData,queryKey,queryFn:inputIsSkipToken?utils.hT:async queryFnContext=>{const actualOpts={...opts,trpc:{...opts?.trpc,...opts?.trpc?.abortOnUnmount?{signal:queryFnContext.signal}:{signal:null}}},result=await untypedClient.query(...getClientArgs(queryKey,actualOpts));return(0,unstable_core_do_not_import.Td)(result)?buildQueryFromAsyncIterable(result,queryClient,queryKey):result}},{trpc:createTRPCOptionsResult({path})})},fetchQuery:(queryKey,opts)=>queryClient.fetchQuery({...opts,queryKey,queryFn:()=>untypedClient.query(...getClientArgs(queryKey,opts))}),fetchInfiniteQuery:(queryKey,opts)=>queryClient.fetchInfiniteQuery({...opts,queryKey,queryFn:({pageParam,direction})=>untypedClient.query(...getClientArgs(queryKey,opts,{pageParam,direction})),initialPageParam:opts?.initialCursor??null}),prefetchQuery:(queryKey,opts)=>queryClient.prefetchQuery({...opts,queryKey,queryFn:()=>untypedClient.query(...getClientArgs(queryKey,opts))}),prefetchInfiniteQuery:(queryKey,opts)=>queryClient.prefetchInfiniteQuery({...opts,queryKey,queryFn:({pageParam,direction})=>untypedClient.query(...getClientArgs(queryKey,opts,{pageParam,direction})),initialPageParam:opts?.initialCursor??null}),ensureQueryData:(queryKey,opts)=>queryClient.ensureQueryData({...opts,queryKey,queryFn:()=>untypedClient.query(...getClientArgs(queryKey,opts))}),invalidateQueries:(queryKey,filters,options)=>queryClient.invalidateQueries({...filters,queryKey},options),resetQueries:(queryKey,filters,options)=>queryClient.resetQueries({...filters,queryKey},options),refetchQueries:(queryKey,filters,options)=>queryClient.refetchQueries({...filters,queryKey},options),cancelQuery:(queryKey,options)=>queryClient.cancelQueries({queryKey},options),setQueryData:(queryKey,updater,options)=>queryClient.setQueryData(queryKey,updater,options),setQueriesData:(queryKey,filters,updater,options)=>queryClient.setQueriesData({...filters,queryKey},updater,options),getQueryData:queryKey=>queryClient.getQueryData(queryKey),setInfiniteQueryData:(queryKey,updater,options)=>queryClient.setQueryData(queryKey,updater,options),getInfiniteQueryData:queryKey=>queryClient.getQueryData(queryKey),setMutationDefaults:(mutationKey,options)=>{const path=mutationKey[0];return queryClient.setMutationDefaults(mutationKey,"function"==typeof options?options({canonicalMutationFn:input=>untypedClient.mutation(...getClientArgs([path,{input}],opts))}):options)},getMutationDefaults:mutationKey=>queryClient.getMutationDefaults(mutationKey),isMutating:filters=>queryClient.isMutating({...filters,exact:!0})}}({client,queryClient})),[client,queryClient]),contextValue=react.useMemo((()=>({abortOnUnmount,queryClient,client,ssrContext:ssrContext??null,ssrState,...fns})),[abortOnUnmount,client,fns,queryClient,ssrContext,ssrState]);return react.useEffect((()=>{setSSRState((state=>!!state&&"mounted"))}),[]),react.createElement(Context.Provider,{value:contextValue},props.children)},createClient:opts=>(0,dist.u4)(opts),useContext,useUtils:useContext,useQuery:function useQuery$1(path,input,opts){const context=useContext(),{abortOnUnmount,client,ssrState,queryClient,prefetchQuery}=context,queryKey=getQueryKeyInternal(path,input,"query"),defaultOpts=queryClient.getQueryDefaults(queryKey),isInputSkipToken=input===utils.hT;"undefined"!=typeof window||"prepass"!==ssrState||!1===opts?.trpc?.ssr||!1===(opts?.enabled??defaultOpts?.enabled)||isInputSkipToken||queryClient.getQueryCache().find({queryKey})||prefetchQuery(queryKey,opts);const ssrOpts=useSSRQueryOptionsIfNeeded(queryKey,{...defaultOpts,...opts}),shouldAbortOnUnmount=opts?.trpc?.abortOnUnmount??config?.abortOnUnmount??abortOnUnmount,hook=function useQuery(options,queryClient){return useBaseQuery(options,QueryObserver,queryClient)}({...ssrOpts,queryKey,queryFn:isInputSkipToken?input:async queryFunctionContext=>{const actualOpts={...ssrOpts,trpc:{...ssrOpts?.trpc,...shouldAbortOnUnmount?{signal:queryFunctionContext.signal}:{signal:null}}},result=await client.query(...getClientArgs(queryKey,actualOpts));return(0,unstable_core_do_not_import.Td)(result)?buildQueryFromAsyncIterable(result,queryClient,queryKey):result}},queryClient);return hook.trpc=useHookResult({path}),hook},usePrefetchQuery:function usePrefetchQuery$1(path,input,opts){const context=useContext(),queryKey=getQueryKeyInternal(path,input,"query"),isInputSkipToken=input===utils.hT,shouldAbortOnUnmount=opts?.trpc?.abortOnUnmount??config?.abortOnUnmount??context.abortOnUnmount;!function usePrefetchQuery(options,queryClient){const client=(0,QueryClientProvider.jE)(queryClient);client.getQueryState(options.queryKey)||client.prefetchQuery(options)}({...opts,queryKey,queryFn:isInputSkipToken?input:queryFunctionContext=>{const actualOpts={trpc:{...opts?.trpc,...shouldAbortOnUnmount?{signal:queryFunctionContext.signal}:{}}};return context.client.query(...getClientArgs(queryKey,actualOpts))}})},useSuspenseQuery:function useSuspenseQuery$1(path,input,opts){const context=useContext(),queryKey=getQueryKeyInternal(path,input,"query"),shouldAbortOnUnmount=opts?.trpc?.abortOnUnmount??config?.abortOnUnmount??context.abortOnUnmount,hook=function useSuspenseQuery(options,queryClient){return useBaseQuery({...options,enabled:!0,suspense:!0,throwOnError:defaultThrowOnError,placeholderData:void 0},QueryObserver,queryClient)}({...opts,queryKey,queryFn:queryFunctionContext=>{const actualOpts={...opts,trpc:{...opts?.trpc,...shouldAbortOnUnmount?{signal:queryFunctionContext.signal}:{signal:null}}};return context.client.query(...getClientArgs(queryKey,actualOpts))}},context.queryClient);return hook.trpc=useHookResult({path}),[hook.data,hook]},useQueries:queriesCallback=>{const{ssrState,queryClient,prefetchQuery,client}=useContext(),queries=queriesCallback(createUseQueries(client));if("undefined"==typeof window&&"prepass"===ssrState)for(const query of queries){const queryOption=query;!1===queryOption.trpc?.ssr||queryClient.getQueryCache().find({queryKey:queryOption.queryKey})||prefetchQuery(queryOption.queryKey,queryOption)}return useQueries({queries:queries.map((query=>({...query,queryKey:query.queryKey})))},queryClient)},useSuspenseQueries:queriesCallback=>{const{queryClient,client}=useContext(),hook=function useSuspenseQueries(options,queryClient){return useQueries({...options,queries:options.queries.map((query=>({...query,suspense:!0,throwOnError:defaultThrowOnError,enabled:!0,placeholderData:void 0})))},queryClient)}({queries:queriesCallback(createUseQueries(client)).map((query=>({...query,queryFn:query.queryFn,queryKey:query.queryKey})))},queryClient);return[hook.map((h=>h.data)),hook]},useMutation:function useMutation$1(path,opts){const{client,queryClient}=useContext(),mutationKey=getMutationKeyInternal(path),defaultOpts=queryClient.defaultMutationOptions(queryClient.getMutationDefaults(mutationKey)),hook=function useMutation(options,queryClient){const client=(0,QueryClientProvider.jE)(queryClient),[observer]=react.useState((()=>new MutationObserver(client,options)));react.useEffect((()=>{observer.setOptions(options)}),[observer,options]);const result=react.useSyncExternalStore(react.useCallback((onStoreChange=>observer.subscribe(notifyManager.j.batchCalls(onStoreChange))),[observer]),(()=>observer.getCurrentResult()),(()=>observer.getCurrentResult())),mutate=react.useCallback(((variables,mutateOptions)=>{observer.mutate(variables,mutateOptions).catch(noop)}),[observer]);if(result.error&&shouldThrowError(observer.options.throwOnError,[result.error]))throw result.error;return{...result,mutate,mutateAsync:result.mutate}}({...opts,mutationKey,mutationFn:input=>client.mutation(...getClientArgs([path,{input}],opts)),onSuccess:(...args)=>mutationSuccessOverride({originalFn:()=>opts?.onSuccess?.(...args)??defaultOpts?.onSuccess?.(...args),queryClient,meta:opts?.meta??defaultOpts?.meta??{}})},queryClient);return hook.trpc=useHookResult({path}),hook},useSubscription:function useSubscription(path,input,opts){const enabled=opts?.enabled??input!==utils.hT,queryKey=(0,utils.EN)(getQueryKeyInternal(path,input,"any")),{client}=useContext(),optsRef=react.useRef(opts);optsRef.current=opts;const trackedProps=react.useRef(new Set([])),addTrackedProp=react.useCallback((key=>{trackedProps.current.add(key)}),[]),currentSubscriptionRef=react.useRef(),reset=react.useCallback((()=>{if(currentSubscriptionRef.current?.(),updateState(getInitialState),!enabled)return;let isStopped=!1;const subscription=client.subscription(path.join("."),input??void 0,{onStarted:()=>{isStopped||(optsRef.current.onStarted?.(),updateState((prev=>({...prev,status:"pending",error:null}))))},onData:data=>{isStopped||(optsRef.current.onData?.(data),updateState((prev=>({...prev,status:"pending",data,error:null}))))},onError:error=>{isStopped||(optsRef.current.onError?.(error),updateState((prev=>({...prev,status:"error",error}))))},onConnectionStateChange:result=>{const delta={status:result.state,error:result.error};updateState((prev=>({...prev,...delta})))}});currentSubscriptionRef.current=()=>{isStopped=!0,subscription.unsubscribe()}}),[queryKey,enabled]),getInitialState=react.useCallback((()=>enabled?{data:void 0,error:null,status:"connecting",reset}:{data:void 0,error:null,status:"idle",reset}),[enabled,reset]),resultRef=react.useRef(getInitialState()),[state,setState]=react.useState(trackResult(resultRef.current,addTrackedProp));state.reset=reset;const updateState=react.useCallback((callback=>{const prev=resultRef.current,next=resultRef.current=callback(prev);let shouldUpdate=!1;for(const key of trackedProps.current)if(prev[key]!==next[key]){shouldUpdate=!0;break}shouldUpdate&&setState(trackResult(next,addTrackedProp))}),[addTrackedProp]);return react.useEffect((()=>{if(enabled)return reset(),()=>{currentSubscriptionRef.current?.()}}),[reset,enabled]),state},useInfiniteQuery:function useInfiniteQuery$1(path,input,opts){const{client,ssrState,prefetchInfiniteQuery,queryClient,abortOnUnmount}=useContext(),queryKey=getQueryKeyInternal(path,input,"infinite"),defaultOpts=queryClient.getQueryDefaults(queryKey),isInputSkipToken=input===utils.hT;"undefined"!=typeof window||"prepass"!==ssrState||!1===opts?.trpc?.ssr||!1===(opts?.enabled??defaultOpts?.enabled)||isInputSkipToken||queryClient.getQueryCache().find({queryKey})||prefetchInfiniteQuery(queryKey,{...defaultOpts,...opts});const ssrOpts=useSSRQueryOptionsIfNeeded(queryKey,{...defaultOpts,...opts}),shouldAbortOnUnmount=opts?.trpc?.abortOnUnmount??abortOnUnmount,hook=function useInfiniteQuery(options,queryClient){return useBaseQuery(options,InfiniteQueryObserver,queryClient)}({...ssrOpts,initialPageParam:opts.initialCursor??null,persister:opts.persister,queryKey,queryFn:isInputSkipToken?input:queryFunctionContext=>{const actualOpts={...ssrOpts,trpc:{...ssrOpts?.trpc,...shouldAbortOnUnmount?{signal:queryFunctionContext.signal}:{signal:null}}};return client.query(...getClientArgs(queryKey,actualOpts,{pageParam:queryFunctionContext.pageParam??opts.initialCursor,direction:queryFunctionContext.direction}))}},queryClient);return hook.trpc=useHookResult({path}),hook},usePrefetchInfiniteQuery:function usePrefetchInfiniteQuery$1(path,input,opts){const context=useContext(),queryKey=getQueryKeyInternal(path,input,"infinite"),defaultOpts=context.queryClient.getQueryDefaults(queryKey),isInputSkipToken=input===utils.hT,ssrOpts=useSSRQueryOptionsIfNeeded(queryKey,{...defaultOpts,...opts}),shouldAbortOnUnmount=opts?.trpc?.abortOnUnmount??context.abortOnUnmount;!function usePrefetchInfiniteQuery(options,queryClient){const client=(0,QueryClientProvider.jE)(queryClient);client.getQueryState(options.queryKey)||client.prefetchInfiniteQuery(options)}({...opts,initialPageParam:opts.initialCursor??null,queryKey,queryFn:isInputSkipToken?input:queryFunctionContext=>{const actualOpts={...ssrOpts,trpc:{...ssrOpts?.trpc,...shouldAbortOnUnmount?{signal:queryFunctionContext.signal}:{}}};return context.client.query(...getClientArgs(queryKey,actualOpts,{pageParam:queryFunctionContext.pageParam??opts.initialCursor,direction:queryFunctionContext.direction}))}})},useSuspenseInfiniteQuery:function useSuspenseInfiniteQuery$1(path,input,opts){const context=useContext(),queryKey=getQueryKeyInternal(path,input,"infinite"),defaultOpts=context.queryClient.getQueryDefaults(queryKey),ssrOpts=useSSRQueryOptionsIfNeeded(queryKey,{...defaultOpts,...opts}),shouldAbortOnUnmount=opts?.trpc?.abortOnUnmount??context.abortOnUnmount,hook=function useSuspenseInfiniteQuery(options,queryClient){return useBaseQuery({...options,enabled:!0,suspense:!0,throwOnError:defaultThrowOnError},InfiniteQueryObserver,queryClient)}({...opts,initialPageParam:opts.initialCursor??null,queryKey,queryFn:queryFunctionContext=>{const actualOpts={...ssrOpts,trpc:{...ssrOpts?.trpc,...shouldAbortOnUnmount?{signal:queryFunctionContext.signal}:{}}};return context.client.query(...getClientArgs(queryKey,actualOpts,{pageParam:queryFunctionContext.pageParam??opts.initialCursor,direction:queryFunctionContext.direction}))}},context.queryClient);return hook.trpc=useHookResult({path}),[hook.data,hook]}}}function createHooksInternal(trpc){const proxy=function createReactDecoration(hooks){return(0,unstable_core_do_not_import.vX)((({path,args})=>{const pathCopy=[...path],lastArg=pathCopy.pop();if("useMutation"===lastArg)return hooks[lastArg](pathCopy,...args);if("_def"===lastArg)return{path:pathCopy};const[input,...rest]=args,opts=rest[0]||{};return hooks[lastArg](pathCopy,input,opts)}))}(trpc);return(0,unstable_core_do_not_import.U6)((key=>"useContext"===key||"useUtils"===key?()=>{const context=trpc.useUtils();return react.useMemo((()=>function createReactQueryUtils(context){const clientProxy=(0,dist.Xq)(context.client),proxy=createRecursiveUtilsProxy(context);return(0,unstable_core_do_not_import.U6)((key=>{const contextName=key;return"client"===contextName?clientProxy:contextProps.includes(contextName)?context[contextName]:proxy[key]}))}(context)),[context])}:trpc.hasOwnProperty(key)?trpc[key]:proxy[key]))}function createTRPCReact(opts){return createHooksInternal(createRootHooks(opts))}},"./node_modules/@trpc/server/dist/unstable-core-do-not-import.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{U6:()=>createFlatProxy,vX:()=>createRecursiveProxy,Td:()=>utils.Td,Gv:()=>utils.Gv,le:()=>jsonlStreamConsumer});const noop=()=>{},freezeIfAvailable=obj=>{Object.freeze&&Object.freeze(obj)};function createInnerProxy(callback,path,memo){var _memo,_cacheKey;const cacheKey=path.join(".");return(_memo=memo)[_cacheKey=cacheKey]??(_memo[_cacheKey]=new Proxy(noop,{get(_obj,key){if("string"==typeof key&&"then"!==key)return createInnerProxy(callback,[...path,key],memo)},apply(_1,_2,args){const lastOfPath=path[path.length-1];let opts={args,path};return"call"===lastOfPath?opts={args:args.length>=2?[args[1]]:[],path:path.slice(0,-1)}:"apply"===lastOfPath&&(opts={args:args.length>=2?args[1]:[],path:path.slice(0,-1)}),freezeIfAvailable(opts.args),freezeIfAvailable(opts.path),callback(opts)}})),memo[cacheKey]}const createRecursiveProxy=callback=>createInnerProxy(callback,[],Object.create(null)),createFlatProxy=callback=>new Proxy(noop,{get(_obj,name){if("string"==typeof name&&"then"!==name)return callback(name)}});__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/rpc/codes.mjs");var utils=__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/utils.mjs");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class UnknownCauseError extends Error{}function TRPCError_getTRPCErrorFromUnknown(cause){if(cause instanceof TRPCError_TRPCError)return cause;if(cause instanceof Error&&"TRPCError"===cause.name)return cause;const trpcError=new TRPCError_TRPCError({code:"INTERNAL_SERVER_ERROR",cause});return cause instanceof Error&&cause.stack&&(trpcError.stack=cause.stack),trpcError}class TRPCError_TRPCError extends Error{constructor(opts){const cause=function getCauseFromUnknown(cause){if(cause instanceof Error)return cause;const type=typeof cause;if("undefined"!==type&&"function"!==type&&null!==cause){if("object"!==type)return new Error(String(cause));if((0,utils.Gv)(cause)){const err=new UnknownCauseError;for(const key in cause)err[key]=cause[key];return err}}}(opts.cause);super(opts.message??cause?.message??opts.code,{cause}),_define_property(this,"cause",void 0),_define_property(this,"code",void 0),this.code=opts.code,this.name="TRPCError",this.cause||(this.cause=cause)}}__webpack_require__("./node_modules/@trpc/server/dist/vendor/unpromise/unpromise.mjs");const CHUNK_VALUE_TYPE_PROMISE=0,CHUNK_VALUE_TYPE_ASYNC_ITERABLE=1,PROMISE_STATUS_FULFILLED=0,PROMISE_STATUS_REJECTED=1,ASYNC_ITERABLE_STATUS_RETURN=0,ASYNC_ITERABLE_STATUS_YIELD=1,ASYNC_ITERABLE_STATUS_ERROR=2;Error;class StreamInterruptedError extends Error{constructor(cause){super("Invalid response or stream interrupted",{cause})}}class AsyncError extends Error{constructor(data){super("Received error from server"),_define_property(this,"data",void 0),this.data=data}}const nodeJsStreamToReaderEsque=source=>({getReader:()=>new ReadableStream({start(controller){source.on("data",(chunk=>{controller.enqueue(chunk)})),source.on("end",(()=>{controller.close()})),source.on("error",(error=>{controller.error(error)}))}}).getReader()});function createConsumerStream(from){const stream=function createLineAccumulator(from){const reader="getReader"in from?from.getReader():nodeJsStreamToReaderEsque(from).getReader();let lineAggregate="";return new ReadableStream({async pull(controller){const{done,value}=await reader.read();done?controller.close():controller.enqueue(value)},cancel:()=>reader.cancel()}).pipeThrough(new TextDecoderStream).pipeThrough(new TransformStream({transform(chunk,controller){lineAggregate+=chunk;const parts=lineAggregate.split("\n");lineAggregate=parts.pop()??"";for(const part of parts)controller.enqueue(part)}}))}(from);let sentHead=!1;return stream.pipeThrough(new TransformStream({transform(line,controller){if(sentHead){const chunk=JSON.parse(line);controller.enqueue(chunk)}else{const head=JSON.parse(line);controller.enqueue(head),sentHead=!0}}}))}async function jsonlStreamConsumer(opts){const{deserialize=v=>v}=opts;let source=createConsumerStream(opts.from);deserialize&&(source=source.pipeThrough(new TransformStream({transform(chunk,controller){controller.enqueue(deserialize(chunk))}})));let headDeferred=function createDeferred(){let resolve,reject;return{promise:new Promise(((res,rej)=>{resolve=res,reject=rej})),resolve,reject}}();const streamManager=function createStreamsManager(abortController){const controllerMap=new Map;function isEmpty(){return Array.from(controllerMap.values()).every((c=>c.closed))}return{getOrCreate(chunkId){const c=controllerMap.get(chunkId);if(c)return c;let originalController;const stream=new ReadableStream({start(controller){originalController=controller}}),controllerEsque={enqueue:v=>originalController.enqueue(v),close:()=>{originalController.close(),Object.assign(controllerEsque,{closed:!0,close:()=>{},enqueue:()=>{}}),isEmpty()&&abortController.abort()},closed:!1,getReader:()=>stream.getReader()};return controllerMap.set(chunkId,controllerEsque),controllerEsque},isEmpty,cancelAll(reason){const error=new StreamInterruptedError(reason);for(const controller of controllerMap.values())controller.enqueue(error),controller.close()}}}(opts.abortController);function decodeChunkDefinition(value){const[_path,type,chunkId]=value,controller=streamManager.getOrCreate(chunkId);switch(type){case CHUNK_VALUE_TYPE_PROMISE:return(0,utils.eF)((async()=>{const reader=controller.getReader();try{const{value}=await reader.read();if(value instanceof StreamInterruptedError)throw value;const[_chunkId,status,data]=value;switch(status){case PROMISE_STATUS_FULFILLED:return decode(data);case PROMISE_STATUS_REJECTED:throw opts.formatError?.({error:data})??new AsyncError(data)}}finally{reader.releaseLock(),controller.close()}}));case CHUNK_VALUE_TYPE_ASYNC_ITERABLE:{async function*generator(){const reader=controller.getReader();try{for(;;){const{value}=await reader.read();if(value instanceof StreamInterruptedError)throw value;const[_chunkId,status,data]=value;switch(status){case ASYNC_ITERABLE_STATUS_YIELD:yield decode(data);break;case ASYNC_ITERABLE_STATUS_RETURN:return decode(data);case ASYNC_ITERABLE_STATUS_ERROR:throw opts.formatError?.({error:data})??new AsyncError(data)}}}finally{reader.releaseLock(),controller.close()}}return generator()}}}function decode(value){const[[data],...asyncProps]=value;for(const value of asyncProps){const[key]=value,decoded=decodeChunkDefinition(value);if(null===key)return decoded;data[key]=decoded}return data}const closeOrAbort=reason=>{const error=new StreamInterruptedError(reason);headDeferred?.reject(error),streamManager.cancelAll(error)};return source.pipeTo(new WritableStream({write(chunkOrHead){if(headDeferred){const head=chunkOrHead;for(const[key,value]of Object.entries(chunkOrHead)){const parsed=decode(value);head[key]=parsed}return headDeferred.resolve(head),void(headDeferred=null)}const chunk=chunkOrHead,[idx]=chunk;streamManager.getOrCreate(idx).enqueue(chunk)},close:closeOrAbort,abort:closeOrAbort}),{signal:opts.abortController.signal}).catch((error=>{opts.onError?.({error}),closeOrAbort(error)})),[await headDeferred.promise,streamManager]}Symbol();__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/stream/utils/timerResource.mjs");Symbol("ping");const defaultTransformer={input:{serialize:obj=>obj,deserialize:obj=>obj},output:{serialize:obj=>obj,deserialize:obj=>obj}};Error;const defaultFormatter=({shape})=>shape;function createMiddlewareFactory(){function createMiddlewareInner(middlewares){return{_middlewares:middlewares,unstable_pipe(middlewareBuilderOrFn){const pipedMiddleware="_middlewares"in middlewareBuilderOrFn?middlewareBuilderOrFn._middlewares:[middlewareBuilderOrFn];return createMiddlewareInner([...middlewares,...pipedMiddleware])}}}return function createMiddleware(fn){return createMiddlewareInner([fn])}}function createInputMiddleware(parse){const inputMiddleware=async function inputValidatorMiddleware(opts){let parsedInput;const rawInput=await opts.getRawInput();try{parsedInput=await parse(rawInput)}catch(cause){throw new TRPCError_TRPCError({code:"BAD_REQUEST",cause})}const combinedInput=(0,utils.Gv)(opts.input)&&(0,utils.Gv)(parsedInput)?{...opts.input,...parsedInput}:parsedInput;return opts.next({input:combinedInput})};return inputMiddleware._type="input",inputMiddleware}function createOutputMiddleware(parse){const outputMiddleware=async function outputValidatorMiddleware({next}){const result=await next();if(!result.ok)return result;try{const data=await parse(result.data);return{...result,data}}catch(cause){throw new TRPCError_TRPCError({message:"Output validation failed",code:"INTERNAL_SERVER_ERROR",cause})}};return outputMiddleware._type="output",outputMiddleware}function getParseFn(procedureParser){const parser=procedureParser;if("function"==typeof parser&&"function"==typeof parser.assert)return parser.assert.bind(parser);if("function"==typeof parser)return parser;if("function"==typeof parser.parseAsync)return parser.parseAsync.bind(parser);if("function"==typeof parser.parse)return parser.parse.bind(parser);if("function"==typeof parser.validateSync)return parser.validateSync.bind(parser);if("function"==typeof parser.create)return parser.create.bind(parser);if("function"==typeof parser.assert)return value=>(parser.assert(value),value);throw new Error("Could not find a validator fn")}function createNewBuilder(def1,def2){const{middlewares=[],inputs,meta,...rest}=def2;return createBuilder({...(0,utils.uf)(def1,rest),inputs:[...def1.inputs,...inputs??[]],middlewares:[...def1.middlewares,...middlewares],meta:def1.meta&&meta?{...def1.meta,...meta}:meta??def1.meta})}function createBuilder(initDef={}){const _def={procedure:!0,inputs:[],middlewares:[],...initDef};return{_def,input(input){const parser=getParseFn(input);return createNewBuilder(_def,{inputs:[input],middlewares:[createInputMiddleware(parser)]})},output(output){const parser=getParseFn(output);return createNewBuilder(_def,{output,middlewares:[createOutputMiddleware(parser)]})},meta:meta=>createNewBuilder(_def,{meta}),use(middlewareBuilderOrFn){const middlewares="_middlewares"in middlewareBuilderOrFn?middlewareBuilderOrFn._middlewares:[middlewareBuilderOrFn];return createNewBuilder(_def,{middlewares})},unstable_concat:builder=>createNewBuilder(_def,builder._def),query:resolver=>createResolver({..._def,type:"query"},resolver),mutation:resolver=>createResolver({..._def,type:"mutation"},resolver),subscription:resolver=>createResolver({..._def,type:"subscription"},resolver),experimental_caller:caller=>createNewBuilder(_def,{caller})}}function createResolver(_defIn,resolver){const finalBuilder=createNewBuilder(_defIn,{resolver,middlewares:[async function resolveMiddleware(opts){return{marker:"middlewareMarker",ok:!0,data:await resolver(opts),ctx:opts.ctx}}]}),_def={...finalBuilder._def,type:_defIn.type,experimental_caller:Boolean(finalBuilder._def.caller),meta:finalBuilder._def.meta,$types:null},invoke=function createProcedureCaller(_def){async function procedure(opts){if(!opts||!("getRawInput"in opts))throw new Error(codeblock);const result=await callRecursive(0,_def,opts);if(!result)throw new TRPCError_TRPCError({code:"INTERNAL_SERVER_ERROR",message:"No result from middlewares - did you forget to `return next()`?"});if(!result.ok)throw result.error;return result.data}return procedure._def=_def,procedure}(finalBuilder._def),callerOverride=finalBuilder._def.caller;if(!callerOverride)return invoke;const callerWrapper=async(...args)=>await callerOverride({args,invoke,_def});return callerWrapper._def=_def,callerWrapper}const codeblock="\nThis is a client-only function.\nIf you want to call this function on the server, see https://trpc.io/docs/v11/server/server-side-calls\n".trim();async function callRecursive(index,_def,opts){try{const middleware=_def.middlewares[index];return await middleware({...opts,meta:_def.meta,input:opts.input,next(_nextOpts){const nextOpts=_nextOpts;return callRecursive(index+1,_def,{...opts,ctx:nextOpts?.ctx?{...opts.ctx,...nextOpts.ctx}:opts.ctx,input:nextOpts&&"input"in nextOpts?nextOpts.input:opts.input,getRawInput:nextOpts?.getRawInput??opts.getRawInput})}})}catch(cause){return{ok:!1,error:TRPCError_getTRPCErrorFromUnknown(cause),marker:"middlewareMarker"}}}var rootConfig=__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/rootConfig.mjs");const emptyRouter={_ctx:null,_errorShape:null,_meta:null,queries:{},mutations:{},subscriptions:{},errorFormatter:defaultFormatter,transformer:defaultTransformer},reservedWords=["then","call","apply"];function createRouterFactory(config){return function createRouterInner(input){const reservedWordsUsed=new Set(Object.keys(input).filter((v=>reservedWords.includes(v))));if(reservedWordsUsed.size>0)throw new Error("Reserved words used in `router({})` call: "+Array.from(reservedWordsUsed).join(", "));const procedures=(0,utils.QQ)({}),record=function step(from,path=[]){const aggregate=(0,utils.QQ)({});for(const[key,item]of Object.entries(from??{})){if((procedureOrRouter=item)._def&&"router"in procedureOrRouter._def){aggregate[key]=step(item._def.record,[...path,key]);continue}if(!isProcedure(item)){aggregate[key]=step(item,[...path,key]);continue}const newPath=[...path,key].join(".");if(procedures[newPath])throw new Error(`Duplicate key: ${newPath}`);procedures[newPath]=item,aggregate[key]=item}var procedureOrRouter;return aggregate}(input),_def={_config:config,router:!0,procedures,...emptyRouter,record};return{...record,_def,createCaller:createCallerFactory()({_def})}}}function isProcedure(procedureOrRouter){return"function"==typeof procedureOrRouter}function createCallerFactory(){return function createCallerInner(router){const _def=router._def;return function createCaller(ctxOrCallback,opts){return createRecursiveProxy((async({path,args})=>{const fullPath=path.join(".");if(1===path.length&&"_def"===path[0])return _def;const procedure=_def.procedures[fullPath];let ctx;try{return ctx=(0,utils.Tn)(ctxOrCallback)?await Promise.resolve(ctxOrCallback()):ctxOrCallback,await procedure({path:fullPath,getRawInput:async()=>args[0],ctx,type:procedure._def.type,signal:opts?.signal})}catch(cause){throw opts?.onError?.({ctx,error:TRPCError_getTRPCErrorFromUnknown(cause),input:args[0],path:fullPath,type:procedure._def.type}),cause}}))}}}function mergeRouters(...routerList){const record=(0,utils.uf)({},...routerList.map((r=>r._def.record)));return createRouterFactory({errorFormatter:routerList.reduce(((currentErrorFormatter,nextRouter)=>{if(nextRouter._def._config.errorFormatter&&nextRouter._def._config.errorFormatter!==defaultFormatter){if(currentErrorFormatter!==defaultFormatter&&currentErrorFormatter!==nextRouter._def._config.errorFormatter)throw new Error("You seem to have several error formatters");return nextRouter._def._config.errorFormatter}return currentErrorFormatter}),defaultFormatter),transformer:routerList.reduce(((prev,current)=>{if(current._def._config.transformer&&current._def._config.transformer!==defaultTransformer){if(prev!==defaultTransformer&&prev!==current._def._config.transformer)throw new Error("You seem to have several transformers");return current._def._config.transformer}return prev}),defaultTransformer),isDev:routerList.every((r=>r._def._config.isDev)),allowOutsideOfServer:routerList.every((r=>r._def._config.allowOutsideOfServer)),isServer:routerList.every((r=>r._def._config.isServer)),$types:routerList[0]?._def._config.$types})(record)}class TRPCBuilder{context(){return new TRPCBuilder}meta(){return new TRPCBuilder}create(opts){const config={...opts,transformer:(transformer=opts?.transformer??defaultTransformer,"input"in transformer?transformer:{input:transformer,output:transformer}),isDev:opts?.isDev??"production"!==globalThis.process?.env.NODE_ENV,allowOutsideOfServer:opts?.allowOutsideOfServer??!1,errorFormatter:opts?.errorFormatter??defaultFormatter,isServer:opts?.isServer??rootConfig.N,$types:null};var transformer;if(!(opts?.isServer??rootConfig.N)&&!0!==opts?.allowOutsideOfServer)throw new Error("You're trying to use @trpc/server in a non-server environment. This is not supported by default.");return{_config:config,procedure:createBuilder({meta:opts?.defaultMeta}),middleware:createMiddlewareFactory(),router:createRouterFactory(config),mergeRouters,createCallerFactory:createCallerFactory()}}}new TRPCBuilder;__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/rpc/parseTRPCMessage.mjs")},"./node_modules/@trpc/server/dist/unstable-core-do-not-import/rootConfig.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>isServerDefault});const isServerDefault="undefined"==typeof window||"Deno"in window||"test"===globalThis.process?.env?.NODE_ENV||!!globalThis.process?.env?.JEST_WORKER_ID||!!globalThis.process?.env?.VITEST_WORKER_ID},"./node_modules/@trpc/server/dist/unstable-core-do-not-import/rpc/codes.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>TRPC_ERROR_CODES_BY_KEY});const TRPC_ERROR_CODES_BY_KEY={PARSE_ERROR:-32700,BAD_REQUEST:-32600,INTERNAL_SERVER_ERROR:-32603,NOT_IMPLEMENTED:-32603,BAD_GATEWAY:-32603,SERVICE_UNAVAILABLE:-32603,GATEWAY_TIMEOUT:-32603,UNAUTHORIZED:-32001,FORBIDDEN:-32003,NOT_FOUND:-32004,METHOD_NOT_SUPPORTED:-32005,TIMEOUT:-32008,CONFLICT:-32009,PRECONDITION_FAILED:-32012,PAYLOAD_TOO_LARGE:-32013,UNSUPPORTED_MEDIA_TYPE:-32015,UNPROCESSABLE_CONTENT:-32022,TOO_MANY_REQUESTS:-32029,CLIENT_CLOSED_REQUEST:-32099}},"./node_modules/@trpc/server/dist/unstable-core-do-not-import/rpc/parseTRPCMessage.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__("./node_modules/@trpc/server/dist/unstable-core-do-not-import/utils.mjs")},"./node_modules/@trpc/server/dist/unstable-core-do-not-import/stream/utils/timerResource.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var _Symbol;(_Symbol=Symbol).dispose??(_Symbol.dispose=Symbol());Symbol()},"./node_modules/@trpc/server/dist/unstable-core-do-not-import/utils.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gv:()=>isObject,IT:()=>unsetMarker,QQ:()=>omitPrototype,Td:()=>isAsyncIterable,Tn:()=>isFunction,eF:()=>run,uf:()=>mergeWithoutOverrides});const unsetMarker=Symbol();function mergeWithoutOverrides(obj1,...objs){const newObj=Object.assign(Object.create(null),obj1);for(const overrides of objs)for(const key in overrides){if(key in newObj&&newObj[key]!==overrides[key])throw new Error(`Duplicate key ${key}`);newObj[key]=overrides[key]}return newObj}function isObject(value){return!!value&&!Array.isArray(value)&&"object"==typeof value}function isFunction(fn){return"function"==typeof fn}function omitPrototype(obj){return Object.assign(Object.create(null),obj)}const asyncIteratorsSupported="function"==typeof Symbol&&!!Symbol.asyncIterator;function isAsyncIterable(value){return asyncIteratorsSupported&&isObject(value)&&Symbol.asyncIterator in value}const run=fn=>fn()},"./node_modules/@trpc/server/dist/vendor/unpromise/unpromise.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{new WeakMap;Symbol.toStringTag},"./node_modules/superjson/dist/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>SuperJSON});class DoubleIndexedKV{constructor(){this.keyToValue=new Map,this.valueToKey=new Map}set(key,value){this.keyToValue.set(key,value),this.valueToKey.set(value,key)}getByKey(key){return this.keyToValue.get(key)}getByValue(value){return this.valueToKey.get(value)}clear(){this.keyToValue.clear(),this.valueToKey.clear()}}class Registry{constructor(generateIdentifier){this.generateIdentifier=generateIdentifier,this.kv=new DoubleIndexedKV}register(value,identifier){this.kv.getByValue(value)||(identifier||(identifier=this.generateIdentifier(value)),this.kv.set(identifier,value))}clear(){this.kv.clear()}getIdentifier(value){return this.kv.getByValue(value)}getValue(identifier){return this.kv.getByKey(identifier)}}class ClassRegistry extends Registry{constructor(){super((c=>c.name)),this.classToAllowedProps=new Map}register(value,options){"object"==typeof options?(options.allowProps&&this.classToAllowedProps.set(value,options.allowProps),super.register(value,options.identifier)):super.register(value,options)}getAllowedProps(value){return this.classToAllowedProps.get(value)}}function find(record,predicate){const values=function valuesOfObj(record){if("values"in Object)return Object.values(record);const values=[];for(const key in record)record.hasOwnProperty(key)&&values.push(record[key]);return values}(record);if("find"in values)return values.find(predicate);const valuesNotNever=values;for(let i=0;i<valuesNotNever.length;i++){const value=valuesNotNever[i];if(predicate(value))return value}}function forEach(record,run){Object.entries(record).forEach((([key,value])=>run(value,key)))}function includes(arr,value){return-1!==arr.indexOf(value)}function findArr(record,predicate){for(let i=0;i<record.length;i++){const value=record[i];if(predicate(value))return value}}class CustomTransformerRegistry{constructor(){this.transfomers={}}register(transformer){this.transfomers[transformer.name]=transformer}findApplicable(v){return find(this.transfomers,(transformer=>transformer.isApplicable(v)))}findByName(name){return this.transfomers[name]}}const isUndefined=payload=>void 0===payload,isPlainObject=payload=>"object"==typeof payload&&null!==payload&&(payload!==Object.prototype&&(null===Object.getPrototypeOf(payload)||Object.getPrototypeOf(payload)===Object.prototype)),isEmptyObject=payload=>isPlainObject(payload)&&0===Object.keys(payload).length,isArray=payload=>Array.isArray(payload),isMap=payload=>payload instanceof Map,isSet=payload=>payload instanceof Set,isSymbol=payload=>"Symbol"===(payload=>Object.prototype.toString.call(payload).slice(8,-1))(payload),isNaNValue=payload=>"number"==typeof payload&&isNaN(payload),isPrimitive=payload=>(payload=>"boolean"==typeof payload)(payload)||(payload=>null===payload)(payload)||isUndefined(payload)||(payload=>"number"==typeof payload&&!isNaN(payload))(payload)||(payload=>"string"==typeof payload)(payload)||isSymbol(payload),escapeKey=key=>key.replace(/\./g,"\\."),stringifyPath=path=>path.map(String).map(escapeKey).join("."),parsePath=string=>{const result=[];let segment="";for(let i=0;i<string.length;i++){let char=string.charAt(i);if("\\"===char&&"."===string.charAt(i+1)){segment+=".",i++;continue}"."===char?(result.push(segment),segment=""):segment+=char}const lastSegment=segment;return result.push(lastSegment),result};var console=__webpack_require__("./node_modules/console-browserify/index.js");function simpleTransformation(isApplicable,annotation,transform,untransform){return{isApplicable,annotation,transform,untransform}}const simpleRules=[simpleTransformation(isUndefined,"undefined",(()=>null),(()=>{})),simpleTransformation((payload=>"bigint"==typeof payload),"bigint",(v=>v.toString()),(v=>"undefined"!=typeof BigInt?BigInt(v):(console.error("Please add a BigInt polyfill."),v))),simpleTransformation((payload=>payload instanceof Date&&!isNaN(payload.valueOf())),"Date",(v=>v.toISOString()),(v=>new Date(v))),simpleTransformation((payload=>payload instanceof Error),"Error",((v,superJson)=>{const baseError={name:v.name,message:v.message};return superJson.allowedErrorProps.forEach((prop=>{baseError[prop]=v[prop]})),baseError}),((v,superJson)=>{const e=new Error(v.message);return e.name=v.name,e.stack=v.stack,superJson.allowedErrorProps.forEach((prop=>{e[prop]=v[prop]})),e})),simpleTransformation((payload=>payload instanceof RegExp),"regexp",(v=>""+v),(regex=>{const body=regex.slice(1,regex.lastIndexOf("/")),flags=regex.slice(regex.lastIndexOf("/")+1);return new RegExp(body,flags)})),simpleTransformation(isSet,"set",(v=>[...v.values()]),(v=>new Set(v))),simpleTransformation(isMap,"map",(v=>[...v.entries()]),(v=>new Map(v))),simpleTransformation((v=>{return isNaNValue(v)||((payload=v)===1/0||payload===-1/0);var payload}),"number",(v=>isNaNValue(v)?"NaN":v>0?"Infinity":"-Infinity"),Number),simpleTransformation((v=>0===v&&1/v==-1/0),"number",(()=>"-0"),Number),simpleTransformation((payload=>payload instanceof URL),"URL",(v=>v.toString()),(v=>new URL(v)))];function compositeTransformation(isApplicable,annotation,transform,untransform){return{isApplicable,annotation,transform,untransform}}const symbolRule=compositeTransformation(((s,superJson)=>{if(isSymbol(s)){return!!superJson.symbolRegistry.getIdentifier(s)}return!1}),((s,superJson)=>["symbol",superJson.symbolRegistry.getIdentifier(s)]),(v=>v.description),((_,a,superJson)=>{const value=superJson.symbolRegistry.getValue(a[1]);if(!value)throw new Error("Trying to deserialize unknown symbol");return value})),constructorToName=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,Uint8ClampedArray].reduce(((obj,ctor)=>(obj[ctor.name]=ctor,obj)),{}),typedArrayRule=compositeTransformation((payload=>ArrayBuffer.isView(payload)&&!(payload instanceof DataView)),(v=>["typed-array",v.constructor.name]),(v=>[...v]),((v,a)=>{const ctor=constructorToName[a[1]];if(!ctor)throw new Error("Trying to deserialize unknown typed array");return new ctor(v)}));function isInstanceOfRegisteredClass(potentialClass,superJson){if(potentialClass?.constructor){return!!superJson.classRegistry.getIdentifier(potentialClass.constructor)}return!1}const classRule=compositeTransformation(isInstanceOfRegisteredClass,((clazz,superJson)=>["class",superJson.classRegistry.getIdentifier(clazz.constructor)]),((clazz,superJson)=>{const allowedProps=superJson.classRegistry.getAllowedProps(clazz.constructor);if(!allowedProps)return{...clazz};const result={};return allowedProps.forEach((prop=>{result[prop]=clazz[prop]})),result}),((v,a,superJson)=>{const clazz=superJson.classRegistry.getValue(a[1]);if(!clazz)throw new Error("Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564");return Object.assign(Object.create(clazz.prototype),v)})),customRule=compositeTransformation(((value,superJson)=>!!superJson.customTransformerRegistry.findApplicable(value)),((value,superJson)=>["custom",superJson.customTransformerRegistry.findApplicable(value).name]),((value,superJson)=>superJson.customTransformerRegistry.findApplicable(value).serialize(value)),((v,a,superJson)=>{const transformer=superJson.customTransformerRegistry.findByName(a[1]);if(!transformer)throw new Error("Trying to deserialize unknown custom value");return transformer.deserialize(v)})),compositeRules=[classRule,symbolRule,customRule,typedArrayRule],transformValue=(value,superJson)=>{const applicableCompositeRule=findArr(compositeRules,(rule=>rule.isApplicable(value,superJson)));if(applicableCompositeRule)return{value:applicableCompositeRule.transform(value,superJson),type:applicableCompositeRule.annotation(value,superJson)};const applicableSimpleRule=findArr(simpleRules,(rule=>rule.isApplicable(value,superJson)));return applicableSimpleRule?{value:applicableSimpleRule.transform(value,superJson),type:applicableSimpleRule.annotation}:void 0},simpleRulesByAnnotation={};simpleRules.forEach((rule=>{simpleRulesByAnnotation[rule.annotation]=rule}));const getNthKey=(value,n)=>{const keys=value.keys();for(;n>0;)keys.next(),n--;return keys.next().value};function validatePath(path){if(includes(path,"__proto__"))throw new Error("__proto__ is not allowed as a property");if(includes(path,"prototype"))throw new Error("prototype is not allowed as a property");if(includes(path,"constructor"))throw new Error("constructor is not allowed as a property")}const setDeep=(object,path,mapper)=>{if(validatePath(path),0===path.length)return mapper(object);let parent=object;for(let i=0;i<path.length-1;i++){const key=path[i];if(isArray(parent)){parent=parent[+key]}else if(isPlainObject(parent))parent=parent[key];else if(isSet(parent)){parent=getNthKey(parent,+key)}else if(isMap(parent)){if(i===path.length-2)break;const row=+key,type=0==+path[++i]?"key":"value",keyOfRow=getNthKey(parent,row);switch(type){case"key":parent=keyOfRow;break;case"value":parent=parent.get(keyOfRow)}}}const lastKey=path[path.length-1];if(isArray(parent)?parent[+lastKey]=mapper(parent[+lastKey]):isPlainObject(parent)&&(parent[lastKey]=mapper(parent[lastKey])),isSet(parent)){const oldValue=getNthKey(parent,+lastKey),newValue=mapper(oldValue);oldValue!==newValue&&(parent.delete(oldValue),parent.add(newValue))}if(isMap(parent)){const row=+path[path.length-2],keyToRow=getNthKey(parent,row);switch(0==+lastKey?"key":"value"){case"key":{const newKey=mapper(keyToRow);parent.set(newKey,parent.get(keyToRow)),newKey!==keyToRow&&parent.delete(keyToRow);break}case"value":parent.set(keyToRow,mapper(parent.get(keyToRow)))}}return object};function traverse(tree,walker,origin=[]){if(!tree)return;if(!isArray(tree))return void forEach(tree,((subtree,key)=>traverse(subtree,walker,[...origin,...parsePath(key)])));const[nodeValue,children]=tree;children&&forEach(children,((child,key)=>{traverse(child,walker,[...origin,...parsePath(key)])})),walker(nodeValue,origin)}function applyValueAnnotations(plain,annotations,superJson){return traverse(annotations,((type,path)=>{plain=setDeep(plain,path,(v=>((json,type,superJson)=>{if(!isArray(type)){const transformation=simpleRulesByAnnotation[type];if(!transformation)throw new Error("Unknown transformation: "+type);return transformation.untransform(json,superJson)}switch(type[0]){case"symbol":return symbolRule.untransform(json,type,superJson);case"class":return classRule.untransform(json,type,superJson);case"custom":return customRule.untransform(json,type,superJson);case"typed-array":return typedArrayRule.untransform(json,type,superJson);default:throw new Error("Unknown transformation: "+type)}})(v,type,superJson)))})),plain}function applyReferentialEqualityAnnotations(plain,annotations){function apply(identicalPaths,path){const object=((object,path)=>{validatePath(path);for(let i=0;i<path.length;i++){const key=path[i];if(isSet(object))object=getNthKey(object,+key);else if(isMap(object)){const row=+key,type=0==+path[++i]?"key":"value",keyOfRow=getNthKey(object,row);switch(type){case"key":object=keyOfRow;break;case"value":object=object.get(keyOfRow)}}else object=object[key]}return object})(plain,parsePath(path));identicalPaths.map(parsePath).forEach((identicalObjectPath=>{plain=setDeep(plain,identicalObjectPath,(()=>object))}))}if(isArray(annotations)){const[root,other]=annotations;root.forEach((identicalPath=>{plain=setDeep(plain,parsePath(identicalPath),(()=>plain))})),other&&forEach(other,apply)}else forEach(annotations,apply);return plain}const walker=(object,identities,superJson,dedupe,path=[],objectsInThisPath=[],seenObjects=new Map)=>{const primitive=isPrimitive(object);if(!primitive){!function addIdentity(object,path,identities){const existingSet=identities.get(object);existingSet?existingSet.push(path):identities.set(object,[path])}(object,path,identities);const seen=seenObjects.get(object);if(seen)return dedupe?{transformedValue:null}:seen}if(!((object,superJson)=>isPlainObject(object)||isArray(object)||isMap(object)||isSet(object)||isInstanceOfRegisteredClass(object,superJson))(object,superJson)){const transformed=transformValue(object,superJson),result=transformed?{transformedValue:transformed.value,annotations:[transformed.type]}:{transformedValue:object};return primitive||seenObjects.set(object,result),result}if(includes(objectsInThisPath,object))return{transformedValue:null};const transformationResult=transformValue(object,superJson),transformed=transformationResult?.value??object,transformedValue=isArray(transformed)?[]:{},innerAnnotations={};forEach(transformed,((value,index)=>{if("__proto__"===index||"constructor"===index||"prototype"===index)throw new Error(`Detected property ${index}. This is a prototype pollution risk, please remove it from your object.`);const recursiveResult=walker(value,identities,superJson,dedupe,[...path,index],[...objectsInThisPath,object],seenObjects);transformedValue[index]=recursiveResult.transformedValue,isArray(recursiveResult.annotations)?innerAnnotations[index]=recursiveResult.annotations:isPlainObject(recursiveResult.annotations)&&forEach(recursiveResult.annotations,((tree,key)=>{innerAnnotations[escapeKey(index)+"."+key]=tree}))}));const result=isEmptyObject(innerAnnotations)?{transformedValue,annotations:transformationResult?[transformationResult.type]:void 0}:{transformedValue,annotations:transformationResult?[transformationResult.type,innerAnnotations]:innerAnnotations};return primitive||seenObjects.set(object,result),result};function dist_getType(payload){return Object.prototype.toString.call(payload).slice(8,-1)}function dist_isArray(payload){return"Array"===dist_getType(payload)}function dist_isPlainObject(payload){if("Object"!==dist_getType(payload))return!1;const prototype=Object.getPrototypeOf(payload);return!!prototype&&prototype.constructor===Object&&prototype===Object.prototype}function dist_isNull(payload){return"Null"===dist_getType(payload)}function dist_isUndefined(payload){return"Undefined"===dist_getType(payload)}(function isOneOf(a,b,c,d,e){return value=>a(value)||b(value)||!!c&&c(value)||!!d&&d(value)||!!e&&e(value)})(dist_isNull,dist_isUndefined);function copy(target,options={}){if(dist_isArray(target))return target.map((item=>copy(item,options)));if(!dist_isPlainObject(target))return target;return[...Object.getOwnPropertyNames(target),...Object.getOwnPropertySymbols(target)].reduce(((carry,key)=>{if(dist_isArray(options.props)&&!options.props.includes(key))return carry;return function assignProp(carry,key,newVal,originalObject,includeNonenumerable){const propType={}.propertyIsEnumerable.call(originalObject,key)?"enumerable":"nonenumerable";"enumerable"===propType&&(carry[key]=newVal),includeNonenumerable&&"nonenumerable"===propType&&Object.defineProperty(carry,key,{value:newVal,enumerable:!1,writable:!0,configurable:!0})}(carry,key,copy(target[key],options),target,options.nonenumerable),carry}),{})}class SuperJSON{constructor({dedupe=!1}={}){this.classRegistry=new ClassRegistry,this.symbolRegistry=new Registry((s=>s.description??"")),this.customTransformerRegistry=new CustomTransformerRegistry,this.allowedErrorProps=[],this.dedupe=dedupe}serialize(object){const identities=new Map,output=walker(object,identities,this,this.dedupe),res={json:output.transformedValue};output.annotations&&(res.meta={...res.meta,values:output.annotations});const equalityAnnotations=function generateReferentialEqualityAnnotations(identitites,dedupe){const result={};let rootEqualityPaths;return identitites.forEach((paths=>{if(paths.length<=1)return;dedupe||(paths=paths.map((path=>path.map(String))).sort(((a,b)=>a.length-b.length)));const[representativePath,...identicalPaths]=paths;0===representativePath.length?rootEqualityPaths=identicalPaths.map(stringifyPath):result[stringifyPath(representativePath)]=identicalPaths.map(stringifyPath)})),rootEqualityPaths?isEmptyObject(result)?[rootEqualityPaths]:[rootEqualityPaths,result]:isEmptyObject(result)?void 0:result}(identities,this.dedupe);return equalityAnnotations&&(res.meta={...res.meta,referentialEqualities:equalityAnnotations}),res}deserialize(payload){const{json,meta}=payload;let result=copy(json);return meta?.values&&(result=applyValueAnnotations(result,meta.values,this)),meta?.referentialEqualities&&(result=applyReferentialEqualityAnnotations(result,meta.referentialEqualities)),result}stringify(object){return JSON.stringify(this.serialize(object))}parse(string){return this.deserialize(JSON.parse(string))}registerClass(v,options){this.classRegistry.register(v,options)}registerSymbol(v,identifier){this.symbolRegistry.register(v,identifier)}registerCustom(transformer,name){this.customTransformerRegistry.register({name,...transformer})}allowErrorProps(...props){this.allowedErrorProps.push(...props)}}SuperJSON.defaultInstance=new SuperJSON,SuperJSON.serialize=SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance),SuperJSON.deserialize=SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance),SuperJSON.stringify=SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance),SuperJSON.parse=SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance),SuperJSON.registerClass=SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance),SuperJSON.registerSymbol=SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance),SuperJSON.registerCustom=SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance),SuperJSON.allowErrorProps=SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);SuperJSON.serialize,SuperJSON.deserialize,SuperJSON.stringify,SuperJSON.parse,SuperJSON.registerClass,SuperJSON.registerCustom,SuperJSON.registerSymbol,SuperJSON.allowErrorProps}}]);